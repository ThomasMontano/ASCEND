<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1blocks_1_1tcp__server__sink" kind="class" prot="public">
    <compoundname>gr::blocks::tcp_server_sink</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_block</basecompoundref>
    <includes refid="tcp__server__sink_8h" local="no">tcp_server_sink.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1blocks_1_1tcp__server__sink_1a1311e5226ea57134a3fed733f3e50307" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1blocks_1_1tcp__server__sink" kindref="compound">tcp_server_sink</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;tcp_server_sink&gt; gr::blocks::tcp_server_sink::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/tcp_server_sink.h" line="45" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/tcp_server_sink.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1blocks_1_1tcp__server__sink_1a3ac6ad4f9eb51c51331ab4e16490250b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1blocks_1_1tcp__server__sink_1a1311e5226ea57134a3fed733f3e50307" kindref="member">sptr</ref></type>
        <definition>static sptr gr::blocks::tcp_server_sink::make</definition>
        <argsstring>(size_t itemsize, const std::string &amp;host, int port, bool noblock=false)</argsstring>
        <name>make</name>
        <param>
          <type>size_t</type>
          <declname>itemsize</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>noblock</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>TCP Server Sink Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itemsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size (in bytes) of the item datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The name or IP address of interface to bind to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port where to listen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noblock</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, wait until first client connects before streaming starts. In non blocking mode (noblock=true), drop data onto floor if no client is connected. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/tcp_server_sink.h" line="58" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Send stream trought an TCP socket. </para>    </briefdescription>
    <detaileddescription>
<para>Listen for incoming TCP connection(s). Duplicate data for each opened connection. Optionally can wait until first client connects before streaming starts. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="776">
        <label>gr::blocks::tcp_server_sink</label>
        <link refid="classgr_1_1blocks_1_1tcp__server__sink"/>
        <childnode refid="777" relation="public-inheritance">
        </childnode>
      </node>
      <node id="777">
        <label>gr::sync_block</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="778">
        <label>gr::blocks::tcp_server_sink</label>
        <link refid="classgr_1_1blocks_1_1tcp__server__sink"/>
        <childnode refid="779" relation="public-inheritance">
        </childnode>
      </node>
      <node id="779">
        <label>gr::sync_block</label>
      </node>
    </collaborationgraph>
    <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/tcp_server_sink.h" line="42" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/tcp_server_sink.h" bodystart="41" bodyend="61"/>
    <listofallmembers>
      <member refid="classgr_1_1blocks_1_1tcp__server__sink_1a3ac6ad4f9eb51c51331ab4e16490250b" prot="public" virt="non-virtual"><scope>gr::blocks::tcp_server_sink</scope><name>make</name></member>
      <member refid="classgr_1_1blocks_1_1tcp__server__sink_1a1311e5226ea57134a3fed733f3e50307" prot="public" virt="non-virtual"><scope>gr::blocks::tcp_server_sink</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
