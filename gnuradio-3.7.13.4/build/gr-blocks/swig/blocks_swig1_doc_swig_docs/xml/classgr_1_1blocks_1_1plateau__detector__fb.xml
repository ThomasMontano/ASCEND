<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1blocks_1_1plateau__detector__fb" kind="class" prot="public" abstract="yes">
    <compoundname>gr::blocks::plateau_detector_fb</compoundname>
    <basecompoundref prot="public" virt="virtual">block</basecompoundref>
    <includes refid="plateau__detector__fb_8h" local="no">plateau_detector_fb.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1blocks_1_1plateau__detector__fb_1a84d2609b23a4eb9860ade6f62c47f068" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1blocks_1_1plateau__detector__fb" kindref="compound">plateau_detector_fb</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;plateau_detector_fb&gt; gr::blocks::plateau_detector_fb::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/plateau_detector_fb.h" line="57" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/plateau_detector_fb.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1blocks_1_1plateau__detector__fb_1a52504a01aff3f7e11511cb7500e1ca6a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1blocks_1_1plateau__detector__fb_1a84d2609b23a4eb9860ade6f62c47f068" kindref="member">sptr</ref></type>
        <definition>static sptr gr::blocks::plateau_detector_fb::make</definition>
        <argsstring>(int max_len, float threshold=0.9)</argsstring>
        <name>make</name>
        <param>
          <type>int</type>
          <declname>max_len</declname>
        </param>
        <param>
          <type>float</type>
          <declname>threshold</declname>
          <defval>0.9</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum length of the plateau </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Anything above this value is considered a plateau </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/plateau_detector_fb.h" line="63" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1blocks_1_1plateau__detector__fb_1a329d6ff3b8f558d72d1715f35603851a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::blocks::plateau_detector_fb::set_threshold</definition>
        <argsstring>(float threshold)=0</argsstring>
        <name>set_threshold</name>
        <param>
          <type>float</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/plateau_detector_fb.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1blocks_1_1plateau__detector__fb_1a87108f096231fa68a235386b4dde19cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float gr::blocks::plateau_detector_fb::threshold</definition>
        <argsstring>() const =0</argsstring>
        <name>threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/plateau_detector_fb.h" line="66" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Detects a plateau and marks the middle. </para>    </briefdescription>
    <detaileddescription>
<para>Detect a plateau of a-priori known height. Input is a stream of floats, the output is a stream of bytes. Whenever a plateau is detected, the middle of that plateau is marked with a &apos;1&apos; on the output stream (all other samples are left at zero).</para><para>You can use this in a Schmidl &amp; Cox synchronisation algorithm to interpret the output of the normalized correlator. Just pass the length of the cyclic prefix (in samples) as the max_len parameter).</para><para>Unlike the peak detectors, you must the now the absolute height of the plateau. Whenever the amplitude exceeds the given threshold, it starts assuming the presence of a plateau.</para><para>An implicit hysteresis is provided by the fact that after detecting one plateau, it waits at least max_len samples before the next plateau can be detected. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="586">
        <label>gr::blocks::plateau_detector_fb</label>
        <link refid="classgr_1_1blocks_1_1plateau__detector__fb"/>
        <childnode refid="587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="587">
        <label>block</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="588">
        <label>gr::blocks::plateau_detector_fb</label>
        <link refid="classgr_1_1blocks_1_1plateau__detector__fb"/>
        <childnode refid="589" relation="public-inheritance">
        </childnode>
      </node>
      <node id="589">
        <label>block</label>
      </node>
    </collaborationgraph>
    <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/plateau_detector_fb.h" line="55" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/plateau_detector_fb.h" bodystart="54" bodyend="67"/>
    <listofallmembers>
      <member refid="classgr_1_1blocks_1_1plateau__detector__fb_1a52504a01aff3f7e11511cb7500e1ca6a" prot="public" virt="non-virtual"><scope>gr::blocks::plateau_detector_fb</scope><name>make</name></member>
      <member refid="classgr_1_1blocks_1_1plateau__detector__fb_1a329d6ff3b8f558d72d1715f35603851a" prot="public" virt="pure-virtual"><scope>gr::blocks::plateau_detector_fb</scope><name>set_threshold</name></member>
      <member refid="classgr_1_1blocks_1_1plateau__detector__fb_1a84d2609b23a4eb9860ade6f62c47f068" prot="public" virt="non-virtual"><scope>gr::blocks::plateau_detector_fb</scope><name>sptr</name></member>
      <member refid="classgr_1_1blocks_1_1plateau__detector__fb_1a87108f096231fa68a235386b4dde19cb" prot="public" virt="pure-virtual"><scope>gr::blocks::plateau_detector_fb</scope><name>threshold</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
