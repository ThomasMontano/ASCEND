<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1blocks_1_1file__meta__source" kind="class" prot="public" abstract="yes">
    <compoundname>gr::blocks::file_meta_source</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_block</basecompoundref>
    <includes refid="file__meta__source_8h" local="no">file_meta_source.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1blocks_1_1file__meta__source_1a2be08712f26dd3f8b7da1b81203cf4c8" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1blocks_1_1file__meta__source" kindref="compound">file_meta_source</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;file_meta_source&gt; gr::blocks::file_meta_source::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" line="55" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1blocks_1_1file__meta__source_1a56957bdf8c84bb75e087227caba1ca57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1blocks_1_1file__meta__source_1a2be08712f26dd3f8b7da1b81203cf4c8" kindref="member">sptr</ref></type>
        <definition>static sptr gr::blocks::file_meta_source::make</definition>
        <argsstring>(const std::string &amp;filename, bool repeat=false, bool detached_header=false, const std::string &amp;hdr_filename=&quot;&quot;)</argsstring>
        <name>make</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>repeat</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>detached_header</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>hdr_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Create a meta-data file source. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>(string): Name of file to write data to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>repeat</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool): Repeats file when EOF is found. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detached_header</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool): Set to true if header info is stored in a separate file (usually named filename.hdr) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hdr_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>(string): Name of detached header file if used. Defaults to &apos;filename.hdr&apos; if detached_header is true but this field is an empty string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1blocks_1_1file__meta__source_1a1f175e2cd67a1aef41ccaaa3ad7b12e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool gr::blocks::file_meta_source::open</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;hdr_filename=&quot;&quot;)=0</argsstring>
        <name>open</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>hdr_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1blocks_1_1file__meta__source_1a1bade9a5d7fb9800c3d00c88f47bb240" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::blocks::file_meta_source::close</definition>
        <argsstring>()=0</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1blocks_1_1file__meta__source_1a310df07d1d63cc28b46b83c547114380" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::blocks::file_meta_source::do_update</definition>
        <argsstring>()=0</argsstring>
        <name>do_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" line="76" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reads stream from file with meta-data headers. Headers are parsed into tags. </para>    </briefdescription>
    <detaileddescription>
<para>The information in the metadata headers includes:</para><para><itemizedlist>
<listitem><para>rx_rate (double): sample rate of data. </para></listitem>
<listitem><para>rx_time (uint64_t, double): time stamp of first sample in segment. </para></listitem>
<listitem><para>size (uint32_t): item size in bytes. </para></listitem>
<listitem><para>type (<ref refid="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6" kindref="member">gr_file_types</ref> as int32_t): data type. </para></listitem>
<listitem><para>cplx (bool): Is data complex? </para></listitem>
<listitem><para>strt (uint64_t): Starting byte of data in this segment. </para></listitem>
<listitem><para>bytes (uint64_t): Size in bytes of data in this segment.</para></listitem>
</itemizedlist>
Any item inside of the extra header dictionary is ready out and made into a stream tag. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="252">
        <label>sync_block</label>
      </node>
      <node id="251">
        <label>gr::blocks::file_meta_source</label>
        <link refid="classgr_1_1blocks_1_1file__meta__source"/>
        <childnode refid="252" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="254">
        <label>sync_block</label>
      </node>
      <node id="253">
        <label>gr::blocks::file_meta_source</label>
        <link refid="classgr_1_1blocks_1_1file__meta__source"/>
        <childnode refid="254" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" line="52" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/gr-blocks/include/gnuradio/blocks/file_meta_source.h" bodystart="51" bodyend="77"/>
    <listofallmembers>
      <member refid="classgr_1_1blocks_1_1file__meta__source_1a1bade9a5d7fb9800c3d00c88f47bb240" prot="public" virt="pure-virtual"><scope>gr::blocks::file_meta_source</scope><name>close</name></member>
      <member refid="classgr_1_1blocks_1_1file__meta__source_1a310df07d1d63cc28b46b83c547114380" prot="public" virt="pure-virtual"><scope>gr::blocks::file_meta_source</scope><name>do_update</name></member>
      <member refid="classgr_1_1blocks_1_1file__meta__source_1a56957bdf8c84bb75e087227caba1ca57" prot="public" virt="non-virtual"><scope>gr::blocks::file_meta_source</scope><name>make</name></member>
      <member refid="classgr_1_1blocks_1_1file__meta__source_1a1f175e2cd67a1aef41ccaaa3ad7b12e0" prot="public" virt="pure-virtual"><scope>gr::blocks::file_meta_source</scope><name>open</name></member>
      <member refid="classgr_1_1blocks_1_1file__meta__source_1a2be08712f26dd3f8b7da1b81203cf4c8" prot="public" virt="non-virtual"><scope>gr::blocks::file_meta_source</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
