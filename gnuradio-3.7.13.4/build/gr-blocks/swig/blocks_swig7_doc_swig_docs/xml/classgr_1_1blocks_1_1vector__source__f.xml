<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1blocks_1_1vector__source__f" kind="class" prot="public" abstract="yes">
    <compoundname>gr::blocks::vector_source_f</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_block</basecompoundref>
    <includes refid="vector__source__f_8h" local="no">vector_source_f.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1blocks_1_1vector__source__f_1a4a027c0cb01d37aa2ae570f8f534aa23" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1blocks_1_1vector__source__f" kindref="compound">vector_source_f</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;vector_source_f&gt; gr::blocks::vector_source_f::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" line="70" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1blocks_1_1vector__source__f_1a4494f30f419f5443eab277dd4e091453" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1blocks_1_1vector__source__f_1a4a027c0cb01d37aa2ae570f8f534aa23" kindref="member">sptr</ref></type>
        <definition>static sptr gr::blocks::vector_source_f::make</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;data, bool repeat=false, int vlen=1, const std::vector&lt; tag_t &gt; &amp;tags=std::vector&lt; tag_t &gt;())</argsstring>
        <name>make</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>repeat</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>vlen</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const std::vector&lt; tag_t &gt; &amp;</type>
          <declname>tags</declname>
          <defval>std::vector&lt; tag_t &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" line="72" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1blocks_1_1vector__source__f_1a6d7d83f4b4450ae6f24aa4e3b020d41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::blocks::vector_source_f::rewind</definition>
        <argsstring>()=0</argsstring>
        <name>rewind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1blocks_1_1vector__source__f_1a02e1b3ae1af974b6ddb9f203ee535b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::blocks::vector_source_f::set_data</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;data, const std::vector&lt; tag_t &gt; &amp;tags=std::vector&lt; tag_t &gt;())=0</argsstring>
        <name>set_data</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::vector&lt; tag_t &gt; &amp;</type>
          <declname>tags</declname>
          <defval>std::vector&lt; tag_t &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1blocks_1_1vector__source__f_1a73c6e99f3f652e7c91993c61ea23f53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::blocks::vector_source_f::set_repeat</definition>
        <argsstring>(bool repeat)=0</argsstring>
        <name>set_repeat</name>
        <param>
          <type>bool</type>
          <declname>repeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Source that streams float items based on the input <computeroutput>data</computeroutput> vector. </para>    </briefdescription>
    <detaileddescription>
<para>This block produces a stream of samples based on an input vector. In C++, this is a std::vector&lt;float&gt;, and in Python, this is either a list or tuple. The data can repeat infinitely until the flowgraph is terminated by some other event or, the default, run the data once and stop.</para><para>The vector source can also produce stream tags with the data. Pass in a vector of gr::tag_t objects and they will be emitted based on the specified offset of the tag.</para><para>GNU Radio provides a utility Python module in gr.tag_utils to convert between tags and Python objects: gr.tag_utils.python_to_tag.</para><para>We can create tags as Python lists (or tuples) using the list structure [int offset, pmt key, pmt value, pmt srcid]. It is important to define the list/tuple with the values in the correct order and with the correct data type. A python dictionary can also be used using the keys: &quot;offset&quot;, &quot;key&quot;, &quot;value&quot;, and &quot;srcid&quot; with the same data types as for the lists.</para><para>When given a list of tags, the vector source will emit the tags repeatedly by updating the offset relative to the vector stream length. That is, if the vector has 500 items and a tag has an offset of 0, that tag will be placed on item 0, 500, 1000, 1500, etc. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="911">
        <label>sync_block</label>
      </node>
      <node id="910">
        <label>gr::blocks::vector_source_f</label>
        <link refid="classgr_1_1blocks_1_1vector__source__f"/>
        <childnode refid="911" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="913">
        <label>sync_block</label>
      </node>
      <node id="912">
        <label>gr::blocks::vector_source_f</label>
        <link refid="classgr_1_1blocks_1_1vector__source__f"/>
        <childnode refid="913" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" line="67" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/build/gr-blocks/include/gnuradio/blocks/vector_source_f.h" bodystart="66" bodyend="80"/>
    <listofallmembers>
      <member refid="classgr_1_1blocks_1_1vector__source__f_1a4494f30f419f5443eab277dd4e091453" prot="public" virt="non-virtual"><scope>gr::blocks::vector_source_f</scope><name>make</name></member>
      <member refid="classgr_1_1blocks_1_1vector__source__f_1a6d7d83f4b4450ae6f24aa4e3b020d41c" prot="public" virt="pure-virtual"><scope>gr::blocks::vector_source_f</scope><name>rewind</name></member>
      <member refid="classgr_1_1blocks_1_1vector__source__f_1a02e1b3ae1af974b6ddb9f203ee535b25" prot="public" virt="pure-virtual"><scope>gr::blocks::vector_source_f</scope><name>set_data</name></member>
      <member refid="classgr_1_1blocks_1_1vector__source__f_1a73c6e99f3f652e7c91993c61ea23f53a" prot="public" virt="pure-virtual"><scope>gr::blocks::vector_source_f</scope><name>set_repeat</name></member>
      <member refid="classgr_1_1blocks_1_1vector__source__f_1a4a027c0cb01d37aa2ae570f8f534aa23" prot="public" virt="non-virtual"><scope>gr::blocks::vector_source_f</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
