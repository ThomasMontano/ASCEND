<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="fxpt__nco_8h" kind="file">
    <compoundname>fxpt_nco.h</compoundname>
    <includes refid="gnuradio_2api_8h" local="no">gnuradio/api.h</includes>
    <includes refid="fxpt_8h" local="no">gnuradio/fxpt.h</includes>
    <includes refid="gr__complex_8h" local="no">gnuradio/gr_complex.h</includes>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="505">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="502">
        <label>gnuradio/attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="504">
        <label>gnuradio/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>stdint.h</label>
      </node>
      <node id="500">
        <label>fxpt_nco.h</label>
        <link refid="fxpt_nco.h"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
      </node>
      <node id="507">
        <label>stddef.h</label>
      </node>
      <node id="506">
        <label>vector</label>
      </node>
      <node id="501">
        <label>gnuradio/api.h</label>
        <link refid="gnuradio_2api_8h"/>
        <childnode refid="502" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>gnuradio/fxpt.h</label>
        <link refid="fxpt_8h"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
      </node>
      <node id="508">
        <label>gnuradio/gr_complex.h</label>
        <link refid="gr__complex_8h"/>
        <childnode refid="509" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>complex</label>
      </node>
    </incdepgraph>
    <innerclass refid="classgr_1_1fxpt__nco" prot="public">gr::fxpt_nco</innerclass>
    <innernamespace refid="namespacegr">gr</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002,2004,2013<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_FXPT_NCO_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_FXPT_NCO_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gnuradio_2api_8h" kindref="compound">gnuradio/api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fxpt_8h" kindref="compound">gnuradio/fxpt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__complex_8h" kindref="compound">gnuradio/gr_complex.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gr<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classgr_1_1fxpt__nco" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="comment">/*GR_RUNTIME_API*/</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco" kindref="compound">fxpt_nco</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>d_phase;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>d_phase_inc;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classgr_1_1fxpt__nco_1a35f161c86e4dcf777f2934cc8dbbd877" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1a35f161c86e4dcf777f2934cc8dbbd877" kindref="member">fxpt_nco</ref>()<sp/>:<sp/>d_phase(0),<sp/>d_phase_inc(0)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classgr_1_1fxpt__nco_1a8e985dc35a19ce833520a85fb642f818" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1a8e985dc35a19ce833520a85fb642f818" kindref="member">~fxpt_nco</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classgr_1_1fxpt__nco_1ade433364b8e8adf76204f578d4afcf6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ade433364b8e8adf76204f578d4afcf6d" kindref="member">set_phase</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_phase<sp/>=<sp/><ref refid="classgr_1_1fxpt_1a86114484325a250853a858e4ab4d1acd" kindref="member">gr::fxpt::float_to_fixed</ref>(angle);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classgr_1_1fxpt__nco_1a297f6034e9a278fe94a89d25f75de887" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a297f6034e9a278fe94a89d25f75de887" kindref="member">adjust_phase</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta_phase)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_phase<sp/>+=<sp/><ref refid="classgr_1_1fxpt_1a86114484325a250853a858e4ab4d1acd" kindref="member">gr::fxpt::float_to_fixed</ref>(delta_phase);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>angle_rate<sp/>is<sp/>in<sp/>radians<sp/>/<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classgr_1_1fxpt__nco_1a6b39937315aff637b428af1b6a2340fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a6b39937315aff637b428af1b6a2340fd" kindref="member">set_freq</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle_rate){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_phase_inc<sp/>=<sp/><ref refid="classgr_1_1fxpt_1a86114484325a250853a858e4ab4d1acd" kindref="member">gr::fxpt::float_to_fixed</ref>(angle_rate);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>angle_rate<sp/>is<sp/>a<sp/>delta<sp/>in<sp/>radians<sp/>/<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classgr_1_1fxpt__nco_1a16a4d6ecff0bbf086eeca378b3f809a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a16a4d6ecff0bbf086eeca378b3f809a6" kindref="member">adjust_freq</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta_angle_rate)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_phase_inc<sp/>+=<sp/><ref refid="classgr_1_1fxpt_1a86114484325a250853a858e4ab4d1acd" kindref="member">gr::fxpt::float_to_fixed</ref>(delta_angle_rate);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>current<sp/>phase<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_phase<sp/>+=<sp/>d_phase_inc;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classgr_1_1fxpt__nco_1ae9f609cf2bb628e6e90fe9aa3476b864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ae9f609cf2bb628e6e90fe9aa3476b864" kindref="member">step</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_phase<sp/>+=<sp/>d_phase_inc<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>units<sp/>are<sp/>radians<sp/>/<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classgr_1_1fxpt__nco_1ac19217420df17b2cfde8dc93f4c9cd50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ac19217420df17b2cfde8dc93f4c9cd50" kindref="member">get_phase</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt_1add5bfd2ce2c084ecb2956ccaf7cc4207" kindref="member">gr::fxpt::fixed_to_float</ref>(d_phase);<sp/>}</highlight></codeline>
<codeline lineno="81" refid="classgr_1_1fxpt__nco_1ada402e57edcf4eada2a7ab2f46502e06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ada402e57edcf4eada2a7ab2f46502e06" kindref="member">get_freq</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt_1add5bfd2ce2c084ecb2956ccaf7cc4207" kindref="member">gr::fxpt::fixed_to_float</ref>(d_phase_inc);<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>sin<sp/>and<sp/>cos<sp/>for<sp/>current<sp/>phase<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classgr_1_1fxpt__nco_1ae70a4d353d5675c7aeba9cb22baaad12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ae70a4d353d5675c7aeba9cb22baaad12" kindref="member">sincos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sinx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cosx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="85"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*sinx<sp/>=<sp/><ref refid="classgr_1_1fxpt_1a8ffd418632630ee06b096dda9ceb18be" kindref="member">gr::fxpt::sin</ref>(d_phase);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*cosx<sp/>=<sp/><ref refid="classgr_1_1fxpt_1a2ea2541e4b14398ad950e1f7232027b4" kindref="member">gr::fxpt::cos</ref>(d_phase);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>cos<sp/>and<sp/>sin<sp/>for<sp/>a<sp/>block<sp/>of<sp/>phase<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classgr_1_1fxpt__nco_1a3657a605265edf0f59f4b9105f35de9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a3657a605265edf0f59f4b9105f35de9a" kindref="member">sincos</ref>(<ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl=1.0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/><ref refid="gr__complex_8h_1aec4bfe41433369afae9327f1b0bc9109" kindref="member">gr_complex</ref>(<ref refid="classgr_1_1fxpt_1a2ea2541e4b14398ad950e1f7232027b4" kindref="member">gr::fxpt::cos</ref>(d_phase)<sp/>*<sp/>ampl,<sp/><ref refid="classgr_1_1fxpt_1a8ffd418632630ee06b096dda9ceb18be" kindref="member">gr::fxpt::sin</ref>(d_phase)<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>sin<sp/>for<sp/>a<sp/>block<sp/>of<sp/>phase<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classgr_1_1fxpt__nco_1aeefc6c722242cf5ceb26a9f550dbfbe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1aeefc6c722242cf5ceb26a9f550dbfbe0" kindref="member">sin</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl=1.0)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(float)(<ref refid="classgr_1_1fxpt_1a8ffd418632630ee06b096dda9ceb18be" kindref="member">gr::fxpt::sin</ref>(d_phase)<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>cos<sp/>for<sp/>a<sp/>block<sp/>of<sp/>phase<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classgr_1_1fxpt__nco_1a93165e4f08a82947f7e2549b6d8e5548" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a93165e4f08a82947f7e2549b6d8e5548" kindref="member">cos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl=1.0)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(float)(<ref refid="classgr_1_1fxpt_1a2ea2541e4b14398ad950e1f7232027b4" kindref="member">gr::fxpt::cos</ref>(d_phase)<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref><sp/>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>sin<sp/>for<sp/>a<sp/>block<sp/>of<sp/>phase<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classgr_1_1fxpt__nco_1ac91c331fc8694ee6212ab6ae3b40a9fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ac91c331fc8694ee6212ab6ae3b40a9fa" kindref="member">sin</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl=1.0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(short)(<ref refid="classgr_1_1fxpt_1a8ffd418632630ee06b096dda9ceb18be" kindref="member">gr::fxpt::sin</ref>(d_phase)<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>cos<sp/>for<sp/>a<sp/>block<sp/>of<sp/>phase<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classgr_1_1fxpt__nco_1a297f79f7274d6abfa23a4b82f86a128b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a297f79f7274d6abfa23a4b82f86a128b" kindref="member">cos</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl=1.0)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(short)(<ref refid="classgr_1_1fxpt_1a2ea2541e4b14398ad950e1f7232027b4" kindref="member">gr::fxpt::cos</ref>(d_phase)<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>sin<sp/>for<sp/>a<sp/>block<sp/>of<sp/>phase<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classgr_1_1fxpt__nco_1a02313c8d288ad1cd9e791b082092fa0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a02313c8d288ad1cd9e791b082092fa0f" kindref="member">sin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl=1.0)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(int)(<ref refid="classgr_1_1fxpt_1a8ffd418632630ee06b096dda9ceb18be" kindref="member">gr::fxpt::sin</ref>(d_phase)<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>cos<sp/>for<sp/>a<sp/>block<sp/>of<sp/>phase<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classgr_1_1fxpt__nco_1a7f7ff159b379a86021492798b06e5178" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a7f7ff159b379a86021492798b06e5178" kindref="member">cos</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl=1.0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(int)(<ref refid="classgr_1_1fxpt_1a2ea2541e4b14398ad950e1f7232027b4" kindref="member">gr::fxpt::cos</ref>(d_phase)<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr_1_1fxpt__nco_1ae39a369881307b2743afd67f25c86b8f" kindref="member">step</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>cos<sp/>or<sp/>sin<sp/>for<sp/>current<sp/>phase<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classgr_1_1fxpt__nco_1a6eff0aab85e2c35d8539d3005cc57958" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1a6eff0aab85e2c35d8539d3005cc57958" kindref="member">cos</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt_1a2ea2541e4b14398ad950e1f7232027b4" kindref="member">gr::fxpt::cos</ref>(d_phase);<sp/>}</highlight></codeline>
<codeline lineno="155" refid="classgr_1_1fxpt__nco_1ad5c91f9460e1b9e91993b27c3c80e773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt__nco_1ad5c91f9460e1b9e91993b27c3c80e773" kindref="member">sin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1fxpt_1a8ffd418632630ee06b096dda9ceb18be" kindref="member">gr::fxpt::sin</ref>(d_phase);<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>gr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GR_FXPT_NCO_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gnuradio-runtime/include/gnuradio/fxpt_nco.h"/>
  </compounddef>
</doxygen>
