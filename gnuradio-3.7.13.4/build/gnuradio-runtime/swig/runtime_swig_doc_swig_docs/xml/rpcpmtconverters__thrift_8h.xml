<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="rpcpmtconverters__thrift_8h" kind="file">
    <compoundname>rpcpmtconverters_thrift.h</compoundname>
    <includes refid="pmt_8h" local="no">pmt/pmt.h</includes>
    <includes local="no">boost/noncopyable.hpp</includes>
    <includes local="no">boost/ptr_container/ptr_map.hpp</includes>
    <includes local="yes">thrift/gnuradio_types.h</includes>
    <includedby refid="rpcserver__thrift_8h" local="no">rpcserver_thrift.h</includedby>
    <incdepgraph>
      <node id="1162">
        <label>pmt/api.h</label>
        <link refid="pmt_2api_8h"/>
        <childnode refid="1163" relation="include">
        </childnode>
      </node>
      <node id="1174">
        <label>gnuradio/messages/msg_accepter.h</label>
        <link refid="messages_2msg__accepter_8h"/>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
      </node>
      <node id="1165">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1163">
        <label>gnuradio/attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="1164">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="1160">
        <label>rpcpmtconverters_thrift.h</label>
        <link refid="rpcpmtconverters_thrift.h"/>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1176" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
      </node>
      <node id="1177">
        <label>boost/ptr_container/ptr_map.hpp</label>
      </node>
      <node id="1169">
        <label>stdint.h</label>
      </node>
      <node id="1173">
        <label>pmt/pmt_sugar.h</label>
        <link refid="pmt__sugar_8h"/>
        <childnode refid="1174" relation="include">
        </childnode>
      </node>
      <node id="1171">
        <label>stdexcept</label>
      </node>
      <node id="1176">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="1168">
        <label>string</label>
      </node>
      <node id="1166">
        <label>boost/any.hpp</label>
      </node>
      <node id="1172">
        <label>vector</label>
      </node>
      <node id="1178">
        <label>thrift/gnuradio_types.h</label>
      </node>
      <node id="1175">
        <label>gnuradio/api.h</label>
        <link refid="gnuradio_2api_8h"/>
        <childnode refid="1163" relation="include">
        </childnode>
      </node>
      <node id="1161">
        <label>pmt/pmt.h</label>
        <link refid="pmt_8h"/>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
      </node>
      <node id="1170">
        <label>iosfwd</label>
      </node>
      <node id="1167">
        <label>complex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1179">
        <label>rpcpmtconverters_thrift.h</label>
        <link refid="rpcpmtconverters_thrift.h"/>
        <childnode refid="1180" relation="include">
        </childnode>
      </node>
      <node id="1180">
        <label>rpcserver_thrift.h</label>
        <link refid="rpcserver__thrift_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__f" prot="public">rpcpmtconverter::to_pmt_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__byte__f" prot="public">rpcpmtconverter::to_pmt_byte_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__short__f" prot="public">rpcpmtconverter::to_pmt_short_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__int__f" prot="public">rpcpmtconverter::to_pmt_int_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__long__f" prot="public">rpcpmtconverter::to_pmt_long_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__double__f" prot="public">rpcpmtconverter::to_pmt_double_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__string__f" prot="public">rpcpmtconverter::to_pmt_string_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__bool__f" prot="public">rpcpmtconverter::to_pmt_bool_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__complex__f" prot="public">rpcpmtconverter::to_pmt_complex_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__f32vect__f" prot="public">rpcpmtconverter::to_pmt_f32vect_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__f64vect__f" prot="public">rpcpmtconverter::to_pmt_f64vect_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__s64vect__f" prot="public">rpcpmtconverter::to_pmt_s64vect_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__s32vect__f" prot="public">rpcpmtconverter::to_pmt_s32vect_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__s16vect__f" prot="public">rpcpmtconverter::to_pmt_s16vect_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__s8vect__f" prot="public">rpcpmtconverter::to_pmt_s8vect_f</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__c32vect__f" prot="public">rpcpmtconverter::to_pmt_c32vect_f</innerclass>
    <innerclass refid="classrpcpmtconverter_1_1To__PMT" prot="public">rpcpmtconverter::To_PMT</innerclass>
    <innerclass refid="structrpcpmtconverter_1_1to__pmt__reg" prot="public">rpcpmtconverter::to_pmt_reg</innerclass>
    <innernamespace refid="namespacerpcpmtconverter">rpcpmtconverter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2014,2015<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RPCPMTCONVERTERS_THRIFT_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RPCPMTCONVERTERS_THRIFT_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pmt_8h" kindref="compound">pmt/pmt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/noncopyable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/ptr_container/ptr_map.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;thrift/gnuradio_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespacerpcpmtconverter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rpcpmtconverter</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>GNURadio::Knob<sp/><ref refid="namespacerpcpmtconverter_1a84b370e9d409f7c7b298b7043e7c7aa0" kindref="member">from_pmt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref>&amp;<sp/>knob);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structrpcpmtconverter_1_1to__pmt__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="structrpcpmtconverter_1_1to__pmt__f_1a2729920b00dafd45a0324409f8caeaf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f_1a2729920b00dafd45a0324409f8caeaf3" kindref="member">to_pmt_f</ref>()<sp/>{;}</highlight></codeline>
<codeline lineno="37" refid="structrpcpmtconverter_1_1to__pmt__f_1a66dd0780d1e07903355f1c56444fb025" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f_1a66dd0780d1e07903355f1c56444fb025" kindref="member">~to_pmt_f</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f_1aefa10f22059378e1c284d35ca107f871" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structrpcpmtconverter_1_1to__pmt__byte__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__byte__f" kindref="compound">to_pmt_byte_f</ref><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__byte__f_1a9cbd77f2bf010f50692ad0811e2e2a30" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="42" refid="structrpcpmtconverter_1_1to__pmt__short__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__short__f" kindref="compound">to_pmt_short_f</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__short__f_1a0a4b1d894a669f5ca835200846e4936e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="43" refid="structrpcpmtconverter_1_1to__pmt__int__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__int__f" kindref="compound">to_pmt_int_f</ref><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__int__f_1a995e29067397dfffe03a57a25f1f5106" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="44" refid="structrpcpmtconverter_1_1to__pmt__long__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__long__f" kindref="compound">to_pmt_long_f</ref><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__long__f_1a3f8baae7def3c2e963d41414c1edad08" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="45" refid="structrpcpmtconverter_1_1to__pmt__double__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__double__f" kindref="compound">to_pmt_double_f</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__double__f_1ad7693af743b0b60e5314828b7c5175ee" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="46" refid="structrpcpmtconverter_1_1to__pmt__string__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__string__f" kindref="compound">to_pmt_string_f</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__string__f_1acdada0ff7b75111da5c58b531d81eefa" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="47" refid="structrpcpmtconverter_1_1to__pmt__bool__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__bool__f" kindref="compound">to_pmt_bool_f</ref><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__bool__f_1a2c89d7ce47a24af3da9ab7ed709da07f" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="48" refid="structrpcpmtconverter_1_1to__pmt__complex__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__complex__f" kindref="compound">to_pmt_complex_f</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__complex__f_1a383c5a4fe91cc937585c3cc9e57101a3" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="49" refid="structrpcpmtconverter_1_1to__pmt__f32vect__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__f32vect__f" kindref="compound">to_pmt_f32vect_f</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f32vect__f_1a761a0767b00a28d545dcd3389a478afd" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="50" refid="structrpcpmtconverter_1_1to__pmt__f64vect__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__f64vect__f" kindref="compound">to_pmt_f64vect_f</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f64vect__f_1a06ecc396861c04cbfa70e6d4e09f4f10" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="51" refid="structrpcpmtconverter_1_1to__pmt__s64vect__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__s64vect__f" kindref="compound">to_pmt_s64vect_f</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__s64vect__f_1aa841e518fed84ce97e9c3d98fd886fd3" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="52" refid="structrpcpmtconverter_1_1to__pmt__s32vect__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__s32vect__f" kindref="compound">to_pmt_s32vect_f</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__s32vect__f_1ab48f90eefb79e034bccc66931bb7f964" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="53" refid="structrpcpmtconverter_1_1to__pmt__s16vect__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__s16vect__f" kindref="compound">to_pmt_s16vect_f</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__s16vect__f_1a95943de580558089526b392effdfb8e0" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="54" refid="structrpcpmtconverter_1_1to__pmt__s8vect__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__s8vect__f" kindref="compound">to_pmt_s8vect_f</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__s8vect__f_1ab2cd34cfd343cf969f332d28d1de68fe" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="55" refid="structrpcpmtconverter_1_1to__pmt__c32vect__f" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__c32vect__f" kindref="compound">to_pmt_c32vect_f</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__f" kindref="compound">to_pmt_f</ref><sp/>{<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__c32vect__f_1aa981ad13c54b3507ed44059916799c10" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);<sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classrpcpmtconverter_1_1To__PMT" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcpmtconverter_1_1To__PMT" kindref="compound">To_PMT</ref><sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>boost::noncopyable<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classrpcpmtconverter_1_1To__PMT_1af7a84c4024d823119cda285977b273fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classrpcpmtconverter_1_1To__PMT" kindref="compound">To_PMT</ref><sp/><ref refid="classrpcpmtconverter_1_1To__PMT_1af7a84c4024d823119cda285977b273fc" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="60" refid="classrpcpmtconverter_1_1To__PMT_1a7a2ca15be0c98f84d4076330348c8ceb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TO_PMT_F&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__reg" kindref="compound">to_pmt_reg</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcpmtconverter_1_1To__PMT_1aacac6ebf577b60fc834c96b509f34a18" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::Knob&amp;<sp/>knob);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classrpcpmtconverter_1_1To__PMT_1aa443e51002e1ccab750121b9f126443d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>boost::ptr_map&lt;GNURadio::BaseTypes::type,<sp/>to_pmt_f&gt;<sp/><ref refid="classrpcpmtconverter_1_1To__PMT_1aa443e51002e1ccab750121b9f126443d" kindref="member">to_pmt_map</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcpmtconverter_1_1To__PMT" kindref="compound">To_PMT</ref>()<sp/>{;}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structrpcpmtconverter_1_1to__pmt__reg" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TO_PMT_F&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcpmtconverter_1_1to__pmt__reg" kindref="compound">to_pmt_reg</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrpcpmtconverter_1_1to__pmt__reg_1a718cec29e09fc079db5ff76427ff82d4" kindref="member">to_pmt_reg</ref>(<ref refid="classrpcpmtconverter_1_1To__PMT" kindref="compound">To_PMT</ref>&amp;<sp/>instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GNURadio::BaseTypes::type<sp/>type);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>RPCPMTCONVERTERS_THRIFT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gnuradio-runtime/include/gnuradio/rpcpmtconverters_thrift.h"/>
  </compounddef>
</doxygen>
