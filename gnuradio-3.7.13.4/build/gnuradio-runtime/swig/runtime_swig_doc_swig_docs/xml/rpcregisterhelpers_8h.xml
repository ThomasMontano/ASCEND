<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="rpcregisterhelpers_8h" kind="file">
    <compoundname>rpcregisterhelpers.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes refid="rpcserver__booter__base_8h" local="no">gnuradio/rpcserver_booter_base.h</includes>
    <includes refid="rpcmanager_8h" local="no">gnuradio/rpcmanager.h</includes>
    <includes refid="rpcserver__selector_8h" local="no">gnuradio/rpcserver_selector.h</includes>
    <includes refid="rpcserver__base_8h" local="no">gnuradio/rpcserver_base.h</includes>
    <includes refid="block__registry_8h" local="no">gnuradio/block_registry.h</includes>
    <includedby refid="pycallback__object_8h" local="no">pycallback_object.h</includedby>
    <incdepgraph>
      <node id="1222">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="1199">
        <label>pmt/api.h</label>
        <link refid="pmt_2api_8h"/>
        <childnode refid="1190" relation="include">
        </childnode>
      </node>
      <node id="1197">
        <label>gnuradio/messages/msg_accepter.h</label>
        <link refid="messages_2msg__accepter_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
      </node>
      <node id="1224">
        <label>boost/thread/condition_variable.hpp</label>
      </node>
      <node id="1192">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1213">
        <label>gnuradio/sptr_magic.h</label>
        <link refid="sptr__magic_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
      </node>
      <node id="1190">
        <label>gnuradio/attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="1216">
        <label>gnuradio/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
        <childnode refid="1187" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
      </node>
      <node id="1200">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="1193">
        <label>gnuradio/rpcserver_booter_aggregator.h</label>
        <link refid="rpcserver__booter__aggregator_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1185" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
        <childnode refid="1186" relation="include">
        </childnode>
      </node>
      <node id="1191">
        <label>gnuradio/rpcmanager_base.h</label>
        <link refid="rpcmanager__base_8h"/>
        <childnode refid="1192" relation="include">
        </childnode>
      </node>
      <node id="1219">
        <label>gnuradio/io_signature.h</label>
        <link refid="io__signature_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
      </node>
      <node id="1203">
        <label>stdint.h</label>
      </node>
      <node id="1206">
        <label>pmt/pmt_sugar.h</label>
        <link refid="pmt__sugar_8h"/>
        <childnode refid="1197" relation="include">
        </childnode>
      </node>
      <node id="1228">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="1220">
        <label>gnuradio/thread/thread.h</label>
        <link refid="thread_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1225" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
        <childnode refid="1187" relation="include">
        </childnode>
      </node>
      <node id="1196">
        <label>gnuradio/rpccallbackregister_base.h</label>
        <link refid="rpccallbackregister__base_8h"/>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
      </node>
      <node id="1215">
        <label>gnuradio/runtime_types.h</label>
        <link refid="runtime__types_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
      </node>
      <node id="1211">
        <label>gnuradio/block_registry.h</label>
        <link refid="block__registry_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
      </node>
      <node id="1205">
        <label>stdexcept</label>
      </node>
      <node id="1221">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="1186">
        <label>string</label>
      </node>
      <node id="1209">
        <label>gnuradio/rpcserver_selector.h</label>
        <link refid="rpcserver__selector_8h"/>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1230">
        <label>map</label>
      </node>
      <node id="1217">
        <label>stddef.h</label>
      </node>
      <node id="1227">
        <label>boost/function.hpp</label>
      </node>
      <node id="1201">
        <label>boost/any.hpp</label>
      </node>
      <node id="1223">
        <label>boost/thread/locks.hpp</label>
      </node>
      <node id="1187">
        <label>vector</label>
      </node>
      <node id="1225">
        <label>boost/thread/barrier.hpp</label>
      </node>
      <node id="1181">
        <label>rpcregisterhelpers.h</label>
        <link refid="rpcregisterhelpers.h"/>
        <childnode refid="1182" relation="include">
        </childnode>
        <childnode refid="1183" relation="include">
        </childnode>
        <childnode refid="1184" relation="include">
        </childnode>
        <childnode refid="1185" relation="include">
        </childnode>
        <childnode refid="1188" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1207">
        <label>gnuradio/messages/msg_producer.h</label>
        <link refid="msg__producer_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
      </node>
      <node id="1212">
        <label>gnuradio/basic_block.h</label>
        <link refid="basic__block_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
        <childnode refid="1226" relation="include">
        </childnode>
        <childnode refid="1227" relation="include">
        </childnode>
        <childnode refid="1228" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1184" relation="include">
        </childnode>
        <childnode refid="1186" relation="include">
        </childnode>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
      </node>
      <node id="1189">
        <label>gnuradio/api.h</label>
        <link refid="gnuradio_2api_8h"/>
        <childnode refid="1190" relation="include">
        </childnode>
      </node>
      <node id="1185">
        <label>gnuradio/rpcserver_booter_base.h</label>
        <link refid="rpcserver__booter__base_8h"/>
        <childnode refid="1186" relation="include">
        </childnode>
        <childnode refid="1187" relation="include">
        </childnode>
      </node>
      <node id="1183">
        <label>sstream</label>
      </node>
      <node id="1188">
        <label>gnuradio/rpcmanager.h</label>
        <link refid="rpcmanager_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1191" relation="include">
        </childnode>
        <childnode refid="1193" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1184" relation="include">
        </childnode>
      </node>
      <node id="1198">
        <label>pmt/pmt.h</label>
        <link refid="pmt_8h"/>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1186" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1187" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
      </node>
      <node id="1226">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="1204">
        <label>iosfwd</label>
      </node>
      <node id="1184">
        <label>iostream</label>
      </node>
      <node id="1194">
        <label>gnuradio/rpcserver_aggregator.h</label>
        <link refid="rpcserver__aggregator_8h"/>
        <childnode refid="1187" relation="include">
        </childnode>
        <childnode refid="1186" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1191" relation="include">
        </childnode>
      </node>
      <node id="1210">
        <label>gnuradio/config.h</label>
      </node>
      <node id="1229">
        <label>deque</label>
      </node>
      <node id="1195">
        <label>gnuradio/rpcserver_base.h</label>
        <link refid="rpcserver__base_8h"/>
        <childnode refid="1196" relation="include">
        </childnode>
      </node>
      <node id="1218">
        <label>gnuradio/gr_complex.h</label>
        <link refid="gr__complex_8h"/>
        <childnode refid="1202" relation="include">
        </childnode>
      </node>
      <node id="1214">
        <label>gnuradio/msg_accepter.h</label>
        <link refid="msg__accepter_8h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
      </node>
      <node id="1202">
        <label>complex</label>
      </node>
      <node id="1182">
        <label>stdio.h</label>
      </node>
      <node id="1208">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1232">
        <label>pycallback_object.h</label>
        <link refid="pycallback__object_8h"/>
      </node>
      <node id="1231">
        <label>rpcregisterhelpers.h</label>
        <link refid="rpcregisterhelpers.h"/>
        <childnode refid="1232" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classrpcextractor__base" prot="public">rpcextractor_base</innerclass>
    <innerclass refid="classrpcextractor__base_3_01T_00_01void_01_4" prot="public">rpcextractor_base&lt; T, void &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor" prot="public">rpcbasic_extractor</innerclass>
    <innerclass refid="classrpcinserter__base" prot="public">rpcinserter_base</innerclass>
    <innerclass refid="classrpcbasic__inserter" prot="public">rpcbasic_inserter</innerclass>
    <innerclass refid="classrpchandler__base" prot="public">rpchandler_base</innerclass>
    <innerclass refid="classrpcbasic__handler" prot="public">rpcbasic_handler</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01void_01_4" prot="public">rpcbasic_extractor&lt; T, void &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01char_01_4" prot="public">rpcbasic_extractor&lt; T, char &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01short_01_4" prot="public">rpcbasic_extractor&lt; T, short &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01double_01_4" prot="public">rpcbasic_extractor&lt; T, double &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01float_01_4" prot="public">rpcbasic_extractor&lt; T, float &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01long_01_4" prot="public">rpcbasic_extractor&lt; T, long &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01int_01_4" prot="public">rpcbasic_extractor&lt; T, int &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01bool_01_4" prot="public">rpcbasic_extractor&lt; T, bool &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01float_01_4_01_4" prot="public">rpcbasic_extractor&lt; T, std::complex&lt; float &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01double_01_4_01_4" prot="public">rpcbasic_extractor&lt; T, std::complex&lt; double &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__extractor_3_01T_00_01std_1_1string_01_4" prot="public">rpcbasic_extractor&lt; T, std::string &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4" prot="public">rpcbasic_inserter&lt; T, uint64_t &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::vector&lt; signed char &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::vector&lt; short &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::vector&lt; int &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::vector&lt; std::complex&lt; float &gt; &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::vector&lt; float &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::vector&lt; uint8_t &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::complex&lt; float &gt; &gt;</innerclass>
    <innerclass refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4" prot="public">rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</innerclass>
    <innerclass refid="structrpc__register__base" prot="public">rpc_register_base</innerclass>
    <innerclass refid="classrpcbasic__base" prot="public">rpcbasic_base</innerclass>
    <innerclass refid="structrpcbasic__register__set" prot="public">rpcbasic_register_set</innerclass>
    <innerclass refid="structrpcbasic__register__trigger" prot="public">rpcbasic_register_trigger</innerclass>
    <innerclass refid="classrpcbasic__register__get" prot="public">rpcbasic_register_get</innerclass>
    <innerclass refid="classrpcbasic__register__variable" prot="public">rpcbasic_register_variable</innerclass>
    <innerclass refid="classrpcbasic__register__variable__rw" prot="public">rpcbasic_register_variable_rw</innerclass>
    <innerclass refid="classrpcbasic__register__handler" prot="public">rpcbasic_register_handler</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="rpcregisterhelpers_8h_1afe15548ba285ca8e75265509ee9ac36f" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;rpcbasic_base&gt; rpcbasic_sptr</definition>
        <argsstring></argsstring>
        <name>rpcbasic_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="36" column="1" bodyfile="/home/udooer/Downloads/gnuradio-3.7.13.4/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2012,2014<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RPCREGISTERHELPERS_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RPCREGISTERHELPERS_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rpcserver__booter__base_8h" kindref="compound">gnuradio/rpcserver_booter_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rpcmanager_8h" kindref="compound">gnuradio/rpcmanager.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rpcserver__selector_8h" kindref="compound">gnuradio/rpcserver_selector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rpcserver__base_8h" kindref="compound">gnuradio/rpcserver_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fixes<sp/>circular<sp/>dependency<sp/>issue<sp/>before<sp/>including<sp/>block_registry.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="rpcregisterhelpers_8h_1afe15548ba285ca8e75265509ee9ac36f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;rpcbasic_base&gt;<sp/><ref refid="rpcregisterhelpers_8h_1afe15548ba285ca8e75265509ee9ac36f" kindref="member">rpcbasic_sptr</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="block__registry_8h" kindref="compound">gnuradio/block_registry.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Extractor<sp/>Base<sp/>Classes</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tto&gt;</highlight></codeline>
<codeline lineno="50" refid="classrpcextractor__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1messages_1_1msg__accepter" kindref="compound">gr::messages::msg_accepter</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54" refid="classrpcextractor__base_1a85303828dca8aef06ede86c1da67a848" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcextractor__base_1a85303828dca8aef06ede86c1da67a848" kindref="member">rpcextractor_base</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(Tto))<sp/>:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">_source</ref>(source),<sp/><ref refid="classrpcextractor__base_1a2048bb831963b0312c0093dad50f6c4a" kindref="member">_func</ref>(func)<sp/>{;}</highlight></codeline>
<codeline lineno="56" refid="classrpcextractor__base_1ab4755c207678a4742f02c7ef0837cdbd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcextractor__base_1ab4755c207678a4742f02c7ef0837cdbd" kindref="member">~rpcextractor_base</ref>()<sp/>{;}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classrpcextractor__base_1a28a869d81b8bdd42f80881180dda0172" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base_1a28a869d81b8bdd42f80881180dda0172" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;rpcextractor_base:<sp/>no<sp/>post<sp/>defined<sp/>for<sp/>this<sp/>data<sp/>type.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63" refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">_source</ref>;</highlight></codeline>
<codeline lineno="64" refid="classrpcextractor__base_1a2048bb831963b0312c0093dad50f6c4a" refkind="member"><highlight class="normal"><sp/><sp/>void<sp/>(T::*<ref refid="classrpcextractor__base_1a2048bb831963b0312c0093dad50f6c4a" kindref="member">_func</ref>)(Tto);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="68" refid="classrpcextractor__base_3_01T_00_01void_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,void&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1messages_1_1msg__accepter" kindref="compound">gr::messages::msg_accepter</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72" refid="classrpcextractor__base_3_01T_00_01void_01_4_1a3b2426f9937067345dd510ced370b271" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcextractor__base_3_01T_00_01void_01_4_1a3b2426f9937067345dd510ced370b271" kindref="member">rpcextractor_base</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)())<sp/>:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">_source</ref>(source),<sp/><ref refid="classrpcextractor__base_1a2048bb831963b0312c0093dad50f6c4a" kindref="member">_func</ref>(func)<sp/>{;}</highlight></codeline>
<codeline lineno="74" refid="classrpcextractor__base_3_01T_00_01void_01_4_1a60e417e8237cea7eac2ab41ebea28157" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcextractor__base_3_01T_00_01void_01_4_1a60e417e8237cea7eac2ab41ebea28157" kindref="member">~rpcextractor_base</ref>()<sp/>{;}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classrpcextractor__base_3_01T_00_01void_01_4_1a9f4d0c628a01463a8843ab001723aaba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base_3_01T_00_01void_01_4_1a9f4d0c628a01463a8843ab001723aaba" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;rpcextractor_base:<sp/>no<sp/>post<sp/>defined<sp/>for<sp/>this<sp/>data<sp/>type.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="classrpcextractor__base_3_01T_00_01void_01_4_1aab0ba086502e0ee84f9389b05427199f" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classrpcextractor__base_3_01T_00_01void_01_4_1aab0ba086502e0ee84f9389b05427199f" kindref="member">_source</ref>;</highlight></codeline>
<codeline lineno="82" refid="classrpcextractor__base_3_01T_00_01void_01_4_1af1f78fda87b4697cd38a4544786bf33c" refkind="member"><highlight class="normal"><sp/><sp/>void<sp/>(T::*<ref refid="classrpcextractor__base_1a2048bb831963b0312c0093dad50f6c4a" kindref="member">_func</ref>)();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tto&gt;</highlight></codeline>
<codeline lineno="89" refid="classrpcbasic__extractor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,Tto&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classrpcbasic__extractor_1ad778f7b6254dae15f6d195672e2514a5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_1ad778f7b6254dae15f6d195672e2514a5" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(Tto))<sp/>:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,Tto&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Inserter<sp/>Base<sp/>Classes</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tfrom&gt;</highlight></codeline>
<codeline lineno="107" refid="classrpcinserter__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1messages_1_1msg__producer" kindref="compound">gr::messages::msg_producer</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110" refid="classrpcinserter__base_1ad0a669031de1cca36cf612f7d4f74b05" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcinserter__base_1ad0a669031de1cca36cf612f7d4f74b05" kindref="member">rpcinserter_base</ref>(T*<sp/>source,<sp/>Tfrom<sp/>(T::*func)())<sp/>:<sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>(source),<sp/><ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>(func)<sp/>{;}</highlight></codeline>
<codeline lineno="111" refid="classrpcinserter__base_1a64dc370d338f128215fa33e237166a18" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcinserter__base_1a64dc370d338f128215fa33e237166a18" kindref="member">rpcinserter_base</ref>()<sp/>{;}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classrpcinserter__base_1a727c8a3ddab04a41bb5cd6e0479e86de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcinserter__base_1a727c8a3ddab04a41bb5cd6e0479e86de" kindref="member">retrieve</ref>()<sp/>{<sp/>assert(0);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref>();<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116" refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>;</highlight></codeline>
<codeline lineno="117" refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" refkind="member"><highlight class="normal"><sp/><sp/>Tfrom<sp/>(T::*<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)();</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tfrom&gt;</highlight></codeline>
<codeline lineno="126" refid="classrpcbasic__inserter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref><sp/>:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,Tfrom&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130" refid="classrpcbasic__inserter_1a1d66af6f64f7bd3cf5c7367c59be2a2d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_1a1d66af6f64f7bd3cf5c7367c59be2a2d" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>Tfrom<sp/>(T::*func)()</highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,Tfrom&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classrpcbasic__inserter_1a5d2238baa8ddfe7351a8e410925df93b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_1a5d2238baa8ddfe7351a8e410925df93b" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>Tfrom<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,Tfrom&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classrpcbasic__inserter_1a817b3a9148aeafe99d12847fccf3b61e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_1a817b3a9148aeafe99d12847fccf3b61e" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmt::mp((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base&lt;T,Tfrom&gt;</ref>::</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base&lt;T,Tfrom&gt;::_func</ref>)());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Handler<sp/>Base<sp/>Classes</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="156" refid="classrpchandler__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpchandler__base" kindref="compound">rpchandler_base</ref></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classgr_1_1messages_1_1msg__accepter" kindref="compound">gr::messages::msg_accepter</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160" refid="classrpchandler__base_1a182bcf39736bf9953992891c57e975df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpchandler__base_1a182bcf39736bf9953992891c57e975df" kindref="member">rpchandler_base</ref>(T*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>handler)<sp/>:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpchandler__base_1a11f672c527da72f1cd1036d2446cbd34" kindref="member">_source</ref>(source),<sp/><ref refid="classrpchandler__base_1af0a69b6d92cf03549c07bbaaa4d63f54" kindref="member">_handler</ref>(handler)<sp/>{;}</highlight></codeline>
<codeline lineno="162" refid="classrpchandler__base_1add105237358147f5e5f04027bf4e301e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpchandler__base_1add105237358147f5e5f04027bf4e301e" kindref="member">~rpchandler_base</ref>()<sp/>{;}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classrpchandler__base_1a345f27c8f501f0640c9b4b7c0f168111" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpchandler__base_1a345f27c8f501f0640c9b4b7c0f168111" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpchandler__base_1a11f672c527da72f1cd1036d2446cbd34" kindref="member">_source</ref>-&gt;post(which_port,<sp/>msg);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169" refid="classrpchandler__base_1a11f672c527da72f1cd1036d2446cbd34" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classrpchandler__base_1a11f672c527da72f1cd1036d2446cbd34" kindref="member">_source</ref>;</highlight></codeline>
<codeline lineno="170" refid="classrpchandler__base_1af0a69b6d92cf03549c07bbaaa4d63f54" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classrpchandler__base_1af0a69b6d92cf03549c07bbaaa4d63f54" kindref="member">_handler</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="178" refid="classrpcbasic__handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__handler" kindref="compound">rpcbasic_handler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpchandler__base" kindref="compound">rpchandler_base</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181" refid="classrpcbasic__handler_1a926961f53fd738d07bcf6a35f6c1da93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__handler_1a926961f53fd738d07bcf6a35f6c1da93" kindref="member">rpcbasic_handler</ref>(T*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>handler)<sp/>:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpchandler__base" kindref="compound">rpchandler_base</ref>&lt;T&gt;(source,<sp/>handler)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Specialized<sp/>Extractors</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="198" refid="classrpcbasic__extractor_3_01T_00_01void_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,void&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,void&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201" refid="classrpcbasic__extractor_3_01T_00_01void_01_4_1a4bf0d908ab87e0e7a106aa4f710cec79" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01void_01_4_1a4bf0d908ab87e0e7a106aa4f710cec79" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)())</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,void&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classrpcbasic__extractor_3_01T_00_01void_01_4_1a5abee3c7387344e71dc5665c82fa1b27" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01void_01_4_1a5abee3c7387344e71dc5665c82fa1b27" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,void&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,void&gt;::_func</ref>)();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="215" refid="classrpcbasic__extractor_3_01T_00_01char_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,char&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,char&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218" refid="classrpcbasic__extractor_3_01T_00_01char_01_4_1a858653c45df102d40e01226c2031dc35" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01char_01_4_1a858653c45df102d40e01226c2031dc35" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,char&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classrpcbasic__extractor_3_01T_00_01char_01_4_1aa70d16a157f8d09e78161cf854c5dcad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01char_01_4_1aa70d16a157f8d09e78161cf854c5dcad" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,char&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,char&gt;::_func</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(static_cast&lt;char&gt;(<ref refid="namespacepmt_1a3d080ca306711e629ccdaa5de60f4ee4" kindref="member">pmt::to_long</ref>(msg)));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="233" refid="classrpcbasic__extractor_3_01T_00_01short_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,short&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,short&gt;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="236" refid="classrpcbasic__extractor_3_01T_00_01short_01_4_1ab53f6417c14035b66939d4512b9e810a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01short_01_4_1ab53f6417c14035b66939d4512b9e810a" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,short&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classrpcbasic__extractor_3_01T_00_01short_01_4_1a7e5e400d9c1dd030a5a015bb9fa0fc7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01short_01_4_1a7e5e400d9c1dd030a5a015bb9fa0fc7c" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,short&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,short&gt;::_func</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(static_cast&lt;short&gt;(<ref refid="namespacepmt_1a3d080ca306711e629ccdaa5de60f4ee4" kindref="member">pmt::to_long</ref>(msg)));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="251" refid="classrpcbasic__extractor_3_01T_00_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,double&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,double&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254" refid="classrpcbasic__extractor_3_01T_00_01double_01_4_1a82923526dcf2536653f276afa096bab5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01double_01_4_1a82923526dcf2536653f276afa096bab5" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,double&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classrpcbasic__extractor_3_01T_00_01double_01_4_1a70b352f92f6e29ebf2f7d9e0a83ecbaf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01double_01_4_1a70b352f92f6e29ebf2f7d9e0a83ecbaf" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,double&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,double&gt;::_func</ref>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacepmt_1a0f58166fe9f449249f5de7dc7b3ab754" kindref="member">pmt::to_double</ref>(msg));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="269" refid="classrpcbasic__extractor_3_01T_00_01float_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,float&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,float&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272" refid="classrpcbasic__extractor_3_01T_00_01float_01_4_1a08e61e3f0dbb15d7761e81951b68c740" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01float_01_4_1a08e61e3f0dbb15d7761e81951b68c740" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,float&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classrpcbasic__extractor_3_01T_00_01float_01_4_1adcdc6e19897abb199c18ccd7cb2e9019" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01float_01_4_1adcdc6e19897abb199c18ccd7cb2e9019" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,float&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,float&gt;::_func</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacepmt_1a0f58166fe9f449249f5de7dc7b3ab754" kindref="member">pmt::to_double</ref>(msg));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="287" refid="classrpcbasic__extractor_3_01T_00_01long_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,long&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,long&gt;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290" refid="classrpcbasic__extractor_3_01T_00_01long_01_4_1a6b4855257e43227be7c3d622629f2a52" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01long_01_4_1a6b4855257e43227be7c3d622629f2a52" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,long&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classrpcbasic__extractor_3_01T_00_01long_01_4_1a144f33002a69a95d17c5b1997253f140" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01long_01_4_1a144f33002a69a95d17c5b1997253f140" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,long&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,long&gt;::_func</ref>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacepmt_1a3d080ca306711e629ccdaa5de60f4ee4" kindref="member">pmt::to_long</ref>(msg));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="305" refid="classrpcbasic__extractor_3_01T_00_01int_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,int&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,int&gt;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="308" refid="classrpcbasic__extractor_3_01T_00_01int_01_4_1a3796bfa152122f478f5da47a5e860fec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01int_01_4_1a3796bfa152122f478f5da47a5e860fec" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,int&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classrpcbasic__extractor_3_01T_00_01int_01_4_1a530608e91a306ed4782fd29decc67948" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01int_01_4_1a530608e91a306ed4782fd29decc67948" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,int&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,int&gt;::_func</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacepmt_1a3d080ca306711e629ccdaa5de60f4ee4" kindref="member">pmt::to_long</ref>(msg));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="323" refid="classrpcbasic__extractor_3_01T_00_01bool_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,bool&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,bool&gt;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326" refid="classrpcbasic__extractor_3_01T_00_01bool_01_4_1a6e1615daa771e01a3db9800720d21d31" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01bool_01_4_1a6e1615daa771e01a3db9800720d21d31" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,bool&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classrpcbasic__extractor_3_01T_00_01bool_01_4_1ad0088032fd43d608dee787c88cf97fb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01bool_01_4_1ad0088032fd43d608dee787c88cf97fb7" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,bool&gt;::_source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,bool&gt;::_func</ref>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacepmt_1a6fc3ef234b101f8719785f9f3544b167" kindref="member">pmt::to_bool</ref>(msg));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal">};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="341" refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01float_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="345" refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a1cc7e1a40f971f541f14be4014b9bd54" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a1cc7e1a40f971f541f14be4014b9bd54" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(std::complex&lt;float&gt;))</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a9d8c7fccef28eb3ad03e3f4a6c003071" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a9d8c7fccef28eb3ad03e3f4a6c003071" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>std::complex&lt;float&gt;<sp/>k<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::complex&lt;float&gt;<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacepmt_1a7e5395b0328218bbba346e3a764aa5b2" kindref="member">pmt::to_complex</ref>(msg));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,std::complex&lt;float&gt;</ref><sp/>&gt;<ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">::</ref></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">     _source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,std::complex&lt;float&gt;</ref><sp/>&gt;<ref refid="classrpcextractor__base_1a2048bb831963b0312c0093dad50f6c4a" kindref="member">::_func</ref>)(k);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="361" refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01double_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="365" refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a7f8c39401ee9833ea1903357432a5017" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a7f8c39401ee9833ea1903357432a5017" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(std::complex&lt;double&gt;))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a124eae18698b700c2a7388c197e54f09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a124eae18698b700c2a7388c197e54f09" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,std::complex&lt;double&gt;</ref><sp/>&gt;<ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">::</ref></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">     _source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,std::complex&lt;double&gt;</ref><sp/>&gt;<ref refid="classrpcextractor__base_1a2048bb831963b0312c0093dad50f6c4a" kindref="member">::_func</ref>)(<ref refid="namespacepmt_1a7e5395b0328218bbba346e3a764aa5b2" kindref="member">pmt::to_complex</ref>(msg));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal">};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="380" refid="classrpcbasic__extractor_3_01T_00_01std_1_1string_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor</ref>&lt;T,std::string&gt;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,std::string&gt;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="384" refid="classrpcbasic__extractor_3_01T_00_01std_1_1string_01_4_1ad5f380aceb25a999207169b26088a130" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01std_1_1string_01_4_1ad5f380aceb25a999207169b26088a130" kindref="member">rpcbasic_extractor</ref>(T*<sp/>source,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*func)(std::string))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base</ref>&lt;T,std::string&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="classrpcbasic__extractor_3_01T_00_01std_1_1string_01_4_1a1811cd7d9de3ad7d4c48d58f7c4ae5f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01std_1_1string_01_4_1a1811cd7d9de3ad7d4c48d58f7c4ae5f5" kindref="member">post</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>which_port,<sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>msg)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,std::string&gt;</ref><ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">::</ref></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><ref refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" kindref="member">     _source</ref>-&gt;*<ref refid="classrpcextractor__base" kindref="compound">rpcextractor_base&lt;T,std::string&gt;::_func</ref>)(<ref refid="namespacepmt_1a7211cb3e5efc5fc508637360f1e428f5" kindref="member">pmt::symbol_to_string</ref>(msg));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Specialized<sp/>Inserters</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="404" refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,uint64_t&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,uint64_t&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="407" refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4_1a0420f7aa4504fe614e96e0a0d7b4a9b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4_1a0420f7aa4504fe614e96e0a0d7b4a9b9" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>uint64_t<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,uint64_t&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4_1a6906010af78e4f32932afdf7414c51b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4_1a6906010af78e4f32932afdf7414c51b1" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>uint64_t<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,uint64_t&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4_1ab406c2311bf93cf3292748d1218287a0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01uint64__t_01_4_1ab406c2311bf93cf3292748d1218287a0" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1afc16836b99dd09140139b78c7dfbba7e" kindref="member">pmt::from_uint64</ref>((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base&lt;T,uint64_t&gt;</ref>::</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base&lt;T,uint64_t&gt;::_func</ref>)());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal">};</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="426" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="430" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4_1af664f6d6d54ad54569268fb9362d2b2f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4_1af664f6d6d54ad54569268fb9362d2b2f" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4_1af675d78e9815c59847ae03214412908d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4_1af675d78e9815c59847ae03214412908d" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4_1a88e99af94110be919034de8747e89c4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01signed_01char_01_4_01_4_1a88e99af94110be919034de8747e89c4a" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>signed<sp/>char<sp/>&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1a151dacdadaf5ed02d167a17c2e6f42bd" kindref="member">pmt::init_s8vector</ref>(vec.size(),<sp/>&amp;vec[0]);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="451" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::vector&lt;<sp/>short<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>short<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="455" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4_1a61c51a99966cbeb6747ec842fc134f5f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4_1a61c51a99966cbeb6747ec842fc134f5f" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;<sp/>short<sp/>&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>short<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4_1a772d2cf5350e88a54f5df4828bf9d063" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4_1a772d2cf5350e88a54f5df4828bf9d063" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;<sp/>short<sp/>&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>short<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4_1ad2c943d9943beb65d4063a3bb087de61" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01short_01_4_01_4_1ad2c943d9943beb65d4063a3bb087de61" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>short<sp/>&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>short<sp/>&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>short<sp/>&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1a2471e5eb6c1dfeb90a3ec49a06a284ab" kindref="member">pmt::init_s16vector</ref>(vec.size(),<sp/>&amp;vec[0]);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal">};</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="476" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::vector&lt;<sp/>int<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>int<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="480" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4_1ab70181c5546bd9f3302e81090ac0f973" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4_1ab70181c5546bd9f3302e81090ac0f973" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;int<sp/>&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;int<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4_1a83b5559e73a6fee2717e11e8ad085f3a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4_1a83b5559e73a6fee2717e11e8ad085f3a" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;int<sp/>&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;int<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4_1a4beff9e1defabd4e8a5036d70fc3a83d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01int_01_4_01_4_1a4beff9e1defabd4e8a5036d70fc3a83d" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;int<sp/>&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>int<sp/>&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1a2cf5f0c6d60b243da6883e40ade75890" kindref="member">pmt::init_s32vector</ref>(vec.size(),<sp/>&amp;vec[0]);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">};</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="501" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::vector&lt;<sp/>std::complex&lt;float&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>std::complex&lt;float&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="505" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4_1adfef1735cd85f85f0232365003258999" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4_1adfef1735cd85f85f0232365003258999" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;std::complex&lt;float&gt;<sp/>&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;std::complex&lt;float&gt;<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4_1ab8bdd4e1eb0defdac7a98a58fa12d636" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4_1ab8bdd4e1eb0defdac7a98a58fa12d636" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;std::complex&lt;float&gt;<sp/>&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;std::complex&lt;float&gt;<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4_1aa1926d97c8d9ab199d73e9be44624811" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01std_1_1complex_3_01float_01_4_01_4_01_4_1aa1926d97c8d9ab199d73e9be44624811" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::complex&lt;float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;std::complex&lt;float&gt;<sp/>&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>std::complex&lt;float&gt;<sp/>&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1a85a76c6ddb29870d7b4fcaeb44b71c41" kindref="member">pmt::init_c32vector</ref>(vec.size(),<sp/>&amp;vec[0]);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal">};</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="526" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::vector&lt;<sp/>float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>float<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="530" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4_1ab36ca03370b2fd496ad9be64215a9f9e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4_1ab36ca03370b2fd496ad9be64215a9f9e" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;float&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;float<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4_1a05b35e157fce51a04e584207c962f128" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4_1a05b35e157fce51a04e584207c962f128" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;float&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;float&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4_1a2fa24c85291058b811533f88e925b1bf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01float_01_4_01_4_1a2fa24c85291058b811533f88e925b1bf" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>vec((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;float&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>float&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1a6d63b1c65c7f0160eea30b5774aa5550" kindref="member">pmt::init_f32vector</ref>(vec.size(),<sp/>&amp;vec[0]);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal">};</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="550" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::vector&lt;<sp/>uint8_t&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>uint8_t<sp/>&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="553" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4_1a9f5c5a6853ec228c59a77978715ded3d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4_1a9f5c5a6853ec228c59a77978715ded3d" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;uint8_t&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;uint8_t<sp/>&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4_1ad2fcc972fa1d02896720ae4a579cedcf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4_1ad2fcc972fa1d02896720ae4a579cedcf" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::vector&lt;uint8_t&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;uint8_t&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4_1ad2ea9ea21b11b92afd946c25d4142d99" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1vector_3_01uint8__t_01_4_01_4_1ad2ea9ea21b11b92afd946c25d4142d99" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint8_t<sp/>&gt;<sp/>vec((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;uint8_t&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::vector&lt;<sp/>uint8_t&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab57cbd3230758a026d3d5e7e7dfa1f21" kindref="member">pmt::init_u8vector</ref>(vec.size(),<sp/>&amp;vec[0]);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal">};</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="573" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;float<sp/>&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="576" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1ac0155a6fda71208d2b3acec2ccad8929" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1ac0155a6fda71208d2b3acec2ccad8929" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::complex&lt;float&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a5c2347fabea7900a9d4f4659ca72d931" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a5c2347fabea7900a9d4f4659ca72d931" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::complex&lt;float&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a33888388fc9763d697ee854938fbc1e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01float_01_4_01_4_1a33888388fc9763d697ee854938fbc1e9" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>std::complex&lt;float<sp/>&gt;<sp/>k((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;float&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1a1441d157003d06deddecadfad54c04a7" kindref="member">pmt::from_complex</ref>(k);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal">};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="596" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;double<sp/>&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="599" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a916fd88f21bbc6097ad04b153a9cf5a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a916fd88f21bbc6097ad04b153a9cf5a2" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::complex&lt;double&gt;<sp/>(T::*func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a86d0aff4ccb367911a97344b46b071b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a86d0aff4ccb367911a97344b46b071b5" kindref="member">rpcbasic_inserter</ref>(T*<sp/>source,<sp/>std::complex&lt;double&gt;<sp/>(T::*func)())</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;(source,<sp/>func)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>{;}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a595352bc58eb771544780760657670b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a595352bc58eb771544780760657670b1" kindref="member">retrieve</ref>()</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>std::complex&lt;double<sp/>&gt;<sp/>k((<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;::</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" kindref="member">_source</ref>-&gt;*<ref refid="classrpcinserter__base" kindref="compound">rpcinserter_base</ref>&lt;T,std::complex&lt;double&gt;<sp/>&gt;::<ref refid="classrpcinserter__base_1aab175e82b4c48407c865f3aaff71a8e2" kindref="member">_func</ref>)());</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1a1441d157003d06deddecadfad54c04a7" kindref="member">pmt::from_complex</ref>(k);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal">};</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="619" refid="structrpc__register__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpc__register__base" kindref="compound">rpc_register_base</ref></highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621" refid="structrpc__register__base_1a99da5c328e17e69652f22d1ecc956f95" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrpc__register__base_1a99da5c328e17e69652f22d1ecc956f95" kindref="member">rpc_register_base</ref>()<sp/>{<ref refid="structrpc__register__base_1ad72a68036ccabdb8c75de37a8c265090" kindref="member">count</ref>++;}</highlight></codeline>
<codeline lineno="622" refid="structrpc__register__base_1ad72a68036ccabdb8c75de37a8c265090" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structrpc__register__base_1ad72a68036ccabdb8c75de37a8c265090" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="classrpcbasic__base" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref></highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="631" refid="classrpcbasic__base_1ab0f3d0bf323958aa51750ccea26cefdb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__base_1ab0f3d0bf323958aa51750ccea26cefdb" kindref="member">rpcbasic_base</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="632" refid="classrpcbasic__base_1ae3f50018ff739652e1a5420acc1503c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__base_1ae3f50018ff739652e1a5420acc1503c3" kindref="member">~rpcbasic_base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="633"><highlight class="normal">};</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Register<sp/>Set<sp/>Classes</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tto&gt;</highlight></codeline>
<codeline lineno="673" refid="structrpcbasic__register__set" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcbasic__register__set" kindref="compound">rpcbasic_register_set</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref></highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701" refid="structrpcbasic__register__set_1a51de2a95c2e182a2130598a081087116" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrpcbasic__register__set_1a51de2a95c2e182a2130598a081087116" kindref="member">rpcbasic_register_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>block_alias,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(Tto),</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="structrpcbasic__register__set_1a032f549f823727e2014cd0702e7da08d" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="structrpcbasic__register__set_1ab9ed086c8b1dd42804e7b162b8888d39" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="structrpcbasic__register__set_1a8dae93963c148c60c51a3b7a12cdeed8" kindref="member">def</ref>,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>d_min<sp/>=<sp/><ref refid="structrpcbasic__register__set_1a032f549f823727e2014cd0702e7da08d" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>d_max<sp/>=<sp/><ref refid="structrpcbasic__register__set_1ab9ed086c8b1dd42804e7b162b8888d39" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>d_def<sp/>=<sp/><ref refid="structrpcbasic__register__set_1a8dae93963c148c60c51a3b7a12cdeed8" kindref="member">def</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>d_units<sp/>=<sp/>units_;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>d_display<sp/>=<sp/>display_;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="block__registry_8h_1ae4e7cd1be7c7f7e231b1644731f18eeb" kindref="member">global_block_registry</ref>.<ref refid="classgr_1_1block__registry_1a67a83c42e2030bba463c99d51e7a8f92" kindref="member">block_lookup</ref>(<ref refid="namespacepmt_1a2a19d2e56f6fbb5645ad17a5937b5f2f" kindref="member">pmt::intern</ref>(block_alias)).get());</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="719"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::configureCallback_t</ref></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extractor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor&lt;T,Tto&gt;</ref>(d_object,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(units_),</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display_,<sp/>std::string(desc_),<sp/>min,<sp/>max,<sp/>def);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>block_alias<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>SET:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1a07ca2bf9c26f30cb9d63df1d8cc19f8a" kindref="member">registerConfigureCallback</ref>(d_id,<sp/>extractor);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="729"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="structrpcbasic__register__set_1a03872c707222797e7f2e82b2899835af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrpcbasic__register__set_1a03872c707222797e7f2e82b2899835af" kindref="member">rpcbasic_register_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>obj,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(Tto),</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="structrpcbasic__register__set_1a032f549f823727e2014cd0702e7da08d" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="structrpcbasic__register__set_1ab9ed086c8b1dd42804e7b162b8888d39" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="structrpcbasic__register__set_1a8dae93963c148c60c51a3b7a12cdeed8" kindref="member">def</ref>,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>d_min<sp/>=<sp/><ref refid="structrpcbasic__register__set_1a032f549f823727e2014cd0702e7da08d" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>d_max<sp/>=<sp/><ref refid="structrpcbasic__register__set_1ab9ed086c8b1dd42804e7b162b8888d39" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>d_def<sp/>=<sp/><ref refid="structrpcbasic__register__set_1a8dae93963c148c60c51a3b7a12cdeed8" kindref="member">def</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>d_units<sp/>=<sp/>units_;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>d_display<sp/>=<sp/>display_;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="773"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::configureCallback_t</ref></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extractor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor" kindref="compound">rpcbasic_extractor&lt;T,Tto&gt;</ref>(d_object,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(units_),</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>display_,<sp/>std::string(desc_),<sp/>min,<sp/>max,<sp/>def);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>SET:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1a07ca2bf9c26f30cb9d63df1d8cc19f8a" kindref="member">registerConfigureCallback</ref>(d_id,<sp/>extractor);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="structrpcbasic__register__set_1ae20c66992db6e92a357e43675ecd46bb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrpcbasic__register__set_1ae20c66992db6e92a357e43675ecd46bb" kindref="member">~rpcbasic_register_set</ref>()</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="788"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1aa46ef83c3bc01bf297fb02487d2b6a62" kindref="member">unregisterConfigureCallback</ref>(d_id);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="790"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="structrpcbasic__register__set_1a032f549f823727e2014cd0702e7da08d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcbasic__register__set_1a032f549f823727e2014cd0702e7da08d" kindref="member">min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_min;<sp/>}</highlight></codeline>
<codeline lineno="794" refid="structrpcbasic__register__set_1ab9ed086c8b1dd42804e7b162b8888d39" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcbasic__register__set_1ab9ed086c8b1dd42804e7b162b8888d39" kindref="member">max</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_max;<sp/>}</highlight></codeline>
<codeline lineno="795" refid="structrpcbasic__register__set_1a8dae93963c148c60c51a3b7a12cdeed8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="structrpcbasic__register__set_1a8dae93963c148c60c51a3b7a12cdeed8" kindref="member">def</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_def;<sp/>}</highlight></codeline>
<codeline lineno="796" refid="structrpcbasic__register__set_1a1bb9b13ad2c8a1a92dab528ace9df508" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structrpcbasic__register__set_1a1bb9b13ad2c8a1a92dab528ace9df508" kindref="member">units</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_units;<sp/>}</highlight></codeline>
<codeline lineno="797" refid="structrpcbasic__register__set_1a49b38a2c61f34ae8535af3b9bcd21902" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structrpcbasic__register__set_1a49b38a2c61f34ae8535af3b9bcd21902" kindref="member">description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_desc;<sp/>}</highlight></codeline>
<codeline lineno="798" refid="structrpcbasic__register__set_1aff3b8222e0db956f4ef28213144bc50d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/><ref refid="structrpcbasic__register__set_1aff3b8222e0db956f4ef28213144bc50d" kindref="member">privilege_level</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_minpriv;<sp/>}</highlight></codeline>
<codeline lineno="799" refid="structrpcbasic__register__set_1a3e9b823cc04e7516ec43d5fccad5a621" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/><ref refid="structrpcbasic__register__set_1a3e9b823cc04e7516ec43d5fccad5a621" kindref="member">default_display</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_display;<sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="structrpcbasic__register__set_1a80b267c6b59dd8d69ca69ea6d099dc4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__set_1a80b267c6b59dd8d69ca69ea6d099dc4b" kindref="member">set_min</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>p)<sp/>{<sp/>d_min<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="802" refid="structrpcbasic__register__set_1a5d271f449868248231febe798bd0390e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__set_1a5d271f449868248231febe798bd0390e" kindref="member">set_max</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>p)<sp/>{<sp/>d_max<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="803" refid="structrpcbasic__register__set_1a89d30056b84c183791aecbbb5b0f82b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__set_1a89d30056b84c183791aecbbb5b0f82b6" kindref="member">set_def</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>p)<sp/>{<sp/>d_def<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="804" refid="structrpcbasic__register__set_1adbf33ec27b820ab61034ce25eb37723a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__set_1adbf33ec27b820ab61034ce25eb37723a" kindref="member">units</ref>(std::string<sp/>u)<sp/>{<sp/>d_units<sp/>=<sp/>u;<sp/>}</highlight></codeline>
<codeline lineno="805" refid="structrpcbasic__register__set_1a2625be65699a4a310a9556c685df8533" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__set_1a2625be65699a4a310a9556c685df8533" kindref="member">description</ref>(std::string<sp/>d)<sp/>{<sp/>d_desc<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="806" refid="structrpcbasic__register__set_1a801178f2620cd5ef9c86e2c61a736f31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__set_1a801178f2620cd5ef9c86e2c61a736f31" kindref="member">privilege_level</ref>(<ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>p)<sp/>{<sp/>d_minpriv<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="807" refid="structrpcbasic__register__set_1ac1f943894d5d617fd408a66453aa3638" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__set_1ac1f943894d5d617fd408a66453aa3638" kindref="member">default_display</ref>(<ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>d)<sp/>{<sp/>d_display<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>std::string<sp/>d_id;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>d_min,<sp/>d_max,<sp/>d_def;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>std::string<sp/>d_units,<sp/>d_desc;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>d_minpriv;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>d_display;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>T<sp/>*d_object;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">};</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Register<sp/>Trigger<sp/>Classes</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="844" refid="structrpcbasic__register__trigger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrpcbasic__register__trigger" kindref="compound">rpcbasic_register_trigger</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref></highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867" refid="structrpcbasic__register__trigger_1af0b1d8ee78a476cfe521a90a7042a2f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrpcbasic__register__trigger_1af0b1d8ee78a476cfe521a90a7042a2f4" kindref="member">rpcbasic_register_trigger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>block_alias,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(),</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="block__registry_8h_1ae4e7cd1be7c7f7e231b1644731f18eeb" kindref="member">global_block_registry</ref>.<ref refid="classgr_1_1block__registry_1a67a83c42e2030bba463c99d51e7a8f92" kindref="member">block_lookup</ref>(<ref refid="namespacepmt_1a2a19d2e56f6fbb5645ad17a5937b5f2f" kindref="member">pmt::intern</ref>(block_alias)).get());</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="877"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::configureCallback_t</ref></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extractor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01void_01_4" kindref="compound">rpcbasic_extractor&lt;T,void&gt;</ref>(d_object,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(desc_));</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>block_alias<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>TRIGGER:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1a07ca2bf9c26f30cb9d63df1d8cc19f8a" kindref="member">registerConfigureCallback</ref>(d_id,<sp/>extractor);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="886"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="structrpcbasic__register__trigger_1a9e0289b6dced5cefc560708771920626" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrpcbasic__register__trigger_1a9e0289b6dced5cefc560708771920626" kindref="member">rpcbasic_register_trigger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>obj,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(),</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="917"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::configureCallback_t</ref></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extractor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__extractor_3_01T_00_01void_01_4" kindref="compound">rpcbasic_extractor&lt;T,void&gt;</ref>(d_object,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(desc_));</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>TRIGGER:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1a07ca2bf9c26f30cb9d63df1d8cc19f8a" kindref="member">registerConfigureCallback</ref>(d_id,<sp/>extractor);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="926"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="structrpcbasic__register__trigger_1a0da82a981db4d8eee34fe8a75086b998" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrpcbasic__register__trigger_1a0da82a981db4d8eee34fe8a75086b998" kindref="member">~rpcbasic_register_trigger</ref>()</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="931"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1aa46ef83c3bc01bf297fb02487d2b6a62" kindref="member">unregisterConfigureCallback</ref>(d_id);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="933"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936" refid="structrpcbasic__register__trigger_1ac3ec48288ebcc549d41fb0c102274c05" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structrpcbasic__register__trigger_1ac3ec48288ebcc549d41fb0c102274c05" kindref="member">description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_desc;<sp/>}</highlight></codeline>
<codeline lineno="937" refid="structrpcbasic__register__trigger_1ad530aa1dfc2befe8b6b4d6688104c5fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/><ref refid="structrpcbasic__register__trigger_1ad530aa1dfc2befe8b6b4d6688104c5fc" kindref="member">privilege_level</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_minpriv;<sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="structrpcbasic__register__trigger_1a1d18e5b4627aabc3ca3d1da66a768304" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__trigger_1a1d18e5b4627aabc3ca3d1da66a768304" kindref="member">description</ref>(std::string<sp/>d)<sp/>{<sp/>d_desc<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="940" refid="structrpcbasic__register__trigger_1a895792c3924627295fca7ea1dbbd0e82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structrpcbasic__register__trigger_1a895792c3924627295fca7ea1dbbd0e82" kindref="member">privilege_level</ref>(<ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>p)<sp/>{<sp/>d_minpriv<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>std::string<sp/>d_id;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>std::string<sp/>d_desc;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>d_minpriv;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>T<sp/>*d_object;</highlight></codeline>
<codeline lineno="947"><highlight class="normal">};</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Register<sp/>Get<sp/>Classes</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tfrom&gt;</highlight></codeline>
<codeline lineno="987" refid="classrpcbasic__register__get" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__register__get" kindref="compound">rpcbasic_register_get</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref></highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017" refid="classrpcbasic__register__get_1a923e56d2f4de6a7375413c59a964de29" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__get_1a923e56d2f4de6a7375413c59a964de29" kindref="member">rpcbasic_register_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>block_alias,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tfrom<sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(),</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>d_min<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>d_max<sp/>=<sp/><ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>d_def<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>d_units<sp/>=<sp/>units_;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>d_display<sp/>=<sp/>display_;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="block__registry_8h_1ae4e7cd1be7c7f7e231b1644731f18eeb" kindref="member">global_block_registry</ref>.<ref refid="classgr_1_1block__registry_1a67a83c42e2030bba463c99d51e7a8f92" kindref="member">block_lookup</ref>(<ref refid="namespacepmt_1a2a19d2e56f6fbb5645ad17a5937b5f2f" kindref="member">pmt::intern</ref>(block_alias)).get());</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="1035"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::queryCallback_t</ref></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inserter(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter&lt;T,Tfrom&gt;</ref>(d_object,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(units_),<sp/>display_,<sp/>std::string(desc_),<sp/>min,<sp/>max,<sp/>def);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>block_alias<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>GET:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1aaf6f4bda26c5b56965f919899deea6e6" kindref="member">registerQueryCallback</ref>(d_id,<sp/>inserter);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1044"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051" refid="classrpcbasic__register__get_1a267dd1e98043093e18d5e0748fc23c03" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__get_1a267dd1e98043093e18d5e0748fc23c03" kindref="member">rpcbasic_register_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>block_alias,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tfrom<sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>d_min<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>d_max<sp/>=<sp/><ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>d_def<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>d_units<sp/>=<sp/>units_;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>d_display<sp/>=<sp/>display_;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="block__registry_8h_1ae4e7cd1be7c7f7e231b1644731f18eeb" kindref="member">global_block_registry</ref>.<ref refid="classgr_1_1block__registry_1a67a83c42e2030bba463c99d51e7a8f92" kindref="member">block_lookup</ref>(<ref refid="namespacepmt_1a2a19d2e56f6fbb5645ad17a5937b5f2f" kindref="member">pmt::intern</ref>(block_alias)).get());</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="1069"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::queryCallback_t</ref></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inserter(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter&lt;T,Tfrom&gt;</ref>(d_object,<sp/>(Tfrom<sp/>(T::*)())</highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(units_),<sp/>display_,<sp/>std::string(desc_),<sp/>min,<sp/>max,<sp/>def);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>block_alias<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>GET<sp/>CONST:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>display_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1aaf6f4bda26c5b56965f919899deea6e6" kindref="member">registerQueryCallback</ref>(d_id,<sp/>inserter);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1078"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="classrpcbasic__register__get_1af3d110b18b0c08ac6bb18b683a06e565" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__get_1af3d110b18b0c08ac6bb18b683a06e565" kindref="member">rpcbasic_register_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>obj,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tfrom<sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(),</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>,</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>d_min<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>d_max<sp/>=<sp/><ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>d_def<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>d_units<sp/>=<sp/>units_;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>d_display<sp/>=<sp/>display_;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="1123"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::queryCallback_t</ref></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inserter(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter&lt;T,Tfrom&gt;</ref>(d_object,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(units_),<sp/>display_,<sp/>std::string(desc_),<sp/>min,<sp/>max,<sp/>def);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>GET:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1aaf6f4bda26c5b56965f919899deea6e6" kindref="member">registerQueryCallback</ref>(d_id,<sp/>inserter);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1132"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139" refid="classrpcbasic__register__get_1a887fc7ee3ebfeeca9b3c6893e338ac93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__get_1a887fc7ee3ebfeeca9b3c6893e338ac93" kindref="member">rpcbasic_register_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>obj,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tfrom<sp/>(T::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;<ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>d_min<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>d_max<sp/>=<sp/><ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>d_def<sp/>=<sp/><ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>d_units<sp/>=<sp/>units_;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>d_display<sp/>=<sp/>display_;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::queryCallback_t</ref></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inserter(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__inserter" kindref="compound">rpcbasic_inserter&lt;T,Tfrom&gt;</ref>(d_object,<sp/>(Tfrom<sp/>(T::*)())</highlight><highlight class="keyword">function</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(units_),<sp/>display_,<sp/>std::string(desc_),<sp/>min,<sp/>max,<sp/>def);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>functionbase;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>GET<sp/>CONST:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>display_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1aaf6f4bda26c5b56965f919899deea6e6" kindref="member">registerQueryCallback</ref>(d_id,<sp/>inserter);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1167"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169" refid="classrpcbasic__register__get_1af293ab168e759115157696ae5873e5b4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__get_1af293ab168e759115157696ae5873e5b4" kindref="member">~rpcbasic_register_get</ref>()</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="1172"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1a390b7472ad2fa8add90199b5957360e6" kindref="member">unregisterQueryCallback</ref>(d_id);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1174"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176" refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" kindref="member">min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_min;<sp/>}</highlight></codeline>
<codeline lineno="1177" refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" kindref="member">max</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_max;<sp/>}</highlight></codeline>
<codeline lineno="1178" refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/><ref refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" kindref="member">def</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_def;<sp/>}</highlight></codeline>
<codeline lineno="1179" refid="classrpcbasic__register__get_1a3f406a8885c734201eceec383d2d2095" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classrpcbasic__register__get_1a3f406a8885c734201eceec383d2d2095" kindref="member">units</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_units;<sp/>}</highlight></codeline>
<codeline lineno="1180" refid="classrpcbasic__register__get_1a3168e9b59e860fac47e91cc2ea7e36ba" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classrpcbasic__register__get_1a3168e9b59e860fac47e91cc2ea7e36ba" kindref="member">description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_desc;<sp/>}</highlight></codeline>
<codeline lineno="1181" refid="classrpcbasic__register__get_1a82c69bafeb7d69dc30536b8a3cd08a0a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/><ref refid="classrpcbasic__register__get_1a82c69bafeb7d69dc30536b8a3cd08a0a" kindref="member">privilege_level</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_minpriv;<sp/>}</highlight></codeline>
<codeline lineno="1182" refid="classrpcbasic__register__get_1af3c898b1090f5181f5d174b2550c1f02" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/><ref refid="classrpcbasic__register__get_1af3c898b1090f5181f5d174b2550c1f02" kindref="member">default_display</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_display;<sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184" refid="classrpcbasic__register__get_1a8c685d0db022c326009e0133f401c4d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__get_1a8c685d0db022c326009e0133f401c4d9" kindref="member">set_min</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>p)<sp/>{<sp/>d_min<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="1185" refid="classrpcbasic__register__get_1af0f9b3a5253781ba7a6d9c04a3838ed7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__get_1af0f9b3a5253781ba7a6d9c04a3838ed7" kindref="member">set_max</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>p)<sp/>{<sp/>d_max<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="1186" refid="classrpcbasic__register__get_1a1351e4d1294e75c5a534dcda0c4b1f9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__get_1a1351e4d1294e75c5a534dcda0c4b1f9e" kindref="member">set_def</ref>(<ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>p)<sp/>{<sp/>d_def<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="1187" refid="classrpcbasic__register__get_1adfde5eddca89662dd56136a8b5d0dc32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__get_1adfde5eddca89662dd56136a8b5d0dc32" kindref="member">units</ref>(std::string<sp/>u)<sp/>{<sp/>d_units<sp/>=<sp/>u;<sp/>}</highlight></codeline>
<codeline lineno="1188" refid="classrpcbasic__register__get_1a7f5d20d6f9ff3f2f98e6512d77d20278" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__get_1a7f5d20d6f9ff3f2f98e6512d77d20278" kindref="member">description</ref>(std::string<sp/>d)<sp/>{<sp/>d_desc<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="1189" refid="classrpcbasic__register__get_1afcc5e22b268e591db3f398ae67131e76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__get_1afcc5e22b268e591db3f398ae67131e76" kindref="member">privilege_level</ref>(<ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>p)<sp/>{<sp/>d_minpriv<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="1190" refid="classrpcbasic__register__get_1aa5453596b6f75204e011106c7af83558" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__get_1aa5453596b6f75204e011106c7af83558" kindref="member">default_display</ref>(<ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>d)<sp/>{<sp/>d_display<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>std::string<sp/>d_id;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>d_min,<sp/>d_max,<sp/>d_def;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>std::string<sp/>d_units,<sp/>d_desc;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>d_minpriv;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>d_display;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>T<sp/>*d_object;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/>*<sp/><sp/><sp/>RPC<sp/>Register<sp/>Variable<sp/>Classes</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tfrom&gt;</highlight></codeline>
<codeline lineno="1241" refid="classrpcbasic__register__variable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable</ref></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref></highlight></codeline>
<codeline lineno="1243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1245" refid="classrpcbasic__register__variable_1a5f20e37f5f8a884f3c209e0f2f45b49e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__get" kindref="compound">rpcbasic_register_get&lt; rpcbasic_register_variable&lt;Tfrom&gt;</ref>,<sp/>Tfrom<sp/>&gt;<sp/><ref refid="classrpcbasic__register__variable_1a5f20e37f5f8a884f3c209e0f2f45b49e" kindref="member">d_rpc_reg</ref>;</highlight></codeline>
<codeline lineno="1246" refid="classrpcbasic__register__variable_1a1a5c2b516653410e4cd77cf488f6e441" refkind="member"><highlight class="normal"><sp/><sp/>Tfrom<sp/>*<ref refid="classrpcbasic__register__variable_1a1a5c2b516653410e4cd77cf488f6e441" kindref="member">d_variable</ref>;</highlight></codeline>
<codeline lineno="1247" refid="classrpcbasic__register__variable_1a2bcd5180c99484455030fdba6c1c185a" refkind="member"><highlight class="normal"><sp/><sp/>Tfrom<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classrpcbasic__register__variable_1a1a5c2b516653410e4cd77cf488f6e441" kindref="member">d_variable</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251" refid="classrpcbasic__register__variable_1a899aa501486d45d8839929b9e412f92f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__variable_1a899aa501486d45d8839929b9e412f92f" kindref="member">setptr</ref>(Tfrom*<sp/>_variable)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable&lt;Tfrom&gt;::d_variable</ref><sp/>=<sp/>_variable;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259" refid="classrpcbasic__register__variable_1ab0217393df3119ecfa36f7d5ea75a801" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__variable_1ab0217393df3119ecfa36f7d5ea75a801" kindref="member">rpcbasic_register_variable</ref>()<sp/>:</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcbasic__register__variable_1a5f20e37f5f8a884f3c209e0f2f45b49e" kindref="member">d_rpc_reg</ref>(</highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/>this,<sp/>&amp;<ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable</ref>::<ref refid="classrpcbasic__register__variable_1a2bcd5180c99484455030fdba6c1c185a" kindref="member">get</ref>,</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmt::<ref refid="pmt_8h_1aa83efad7d7f377e5c9e06279a93221da" kindref="member">PMT_NIL</ref>,<sp/>pmt::<ref refid="pmt_8h_1aa83efad7d7f377e5c9e06279a93221da" kindref="member">PMT_NIL</ref>,<sp/>pmt::<ref refid="pmt_8h_1aa83efad7d7f377e5c9e06279a93221da" kindref="member">PMT_NIL</ref>,<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>,</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>),</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcbasic__register__variable_1a1a5c2b516653410e4cd77cf488f6e441" kindref="member">d_variable</ref>(NULL)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>rpcbasic_register_variable<sp/>called<sp/>with<sp/>no<sp/>args.<sp/>If<sp/>this<sp/>happens,<sp/>someone<sp/>has<sp/>tried<sp/>to<sp/>use<sp/>rpcbasic_register_variable<sp/>incorrectly.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286" refid="classrpcbasic__register__variable_1a883b1a89b44a021f3c18838d9958a393" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__variable_1a883b1a89b44a021f3c18838d9958a393" kindref="member">rpcbasic_register_variable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>namebase,</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tfrom<sp/>*variable,</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;def,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)<sp/>:</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcbasic__register__variable_1a5f20e37f5f8a884f3c209e0f2f45b49e" kindref="member">d_rpc_reg</ref>(namebase,<sp/>functionbase,<sp/>this,<sp/>&amp;<ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable</ref>::<ref refid="classrpcbasic__register__variable_1a2bcd5180c99484455030fdba6c1c185a" kindref="member">get</ref>,</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min,<sp/>max,<sp/>def,<sp/>units_,<sp/>desc_,<sp/>minpriv_,<sp/>display_),</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcbasic__register__variable_1a1a5c2b516653410e4cd77cf488f6e441" kindref="member">d_variable</ref>(variable)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>VAR:<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tfrom&gt;</highlight></codeline>
<codeline lineno="1339" refid="classrpcbasic__register__variable__rw" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__register__variable__rw" kindref="compound">rpcbasic_register_variable_rw</ref></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable</ref>&lt;Tfrom&gt;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><ref refid="structrpcbasic__register__set" kindref="compound">rpcbasic_register_set&lt; rpcbasic_register_variable_rw&lt;Tfrom&gt;</ref>,<sp/>Tfrom<sp/>&gt;<sp/>d_rpc_regset;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1349" refid="classrpcbasic__register__variable__rw_1ad7b988892ee640a2a148ebf342e55b8f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__variable__rw_1ad7b988892ee640a2a148ebf342e55b8f" kindref="member">rpcbasic_register_variable_rw</ref>()<sp/><sp/>:</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>d_rpc_regset(</highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/>this,</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable</ref>&lt;Tfrom&gt;::<ref refid="classrpcbasic__register__variable_1a2bcd5180c99484455030fdba6c1c185a" kindref="member">get</ref>,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmt::<ref refid="pmt_8h_1aa83efad7d7f377e5c9e06279a93221da" kindref="member">PMT_NIL</ref>,<sp/>pmt::<ref refid="pmt_8h_1aa83efad7d7f377e5c9e06279a93221da" kindref="member">PMT_NIL</ref>,<sp/>pmt::<ref refid="pmt_8h_1aa83efad7d7f377e5c9e06279a93221da" kindref="member">PMT_NIL</ref>,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">,<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>rpcbasic_register_variable_rw<sp/>called<sp/>with<sp/>no<sp/>args.<sp/>if<sp/>this<sp/>happens<sp/>someone<sp/>used<sp/>rpcbasic_register_variable_rw<sp/>incorrectly.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358" refid="classrpcbasic__register__variable__rw_1a8e04cf081559e9aa6235fd27301cec12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__variable__rw_1a8e04cf081559e9aa6235fd27301cec12" kindref="member">set</ref>(Tfrom<sp/>_variable)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable&lt;Tfrom&gt;::d_variable</ref>)<sp/>=<sp/>_variable;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="classrpcbasic__register__variable__rw_1a5b6a0543111bec2aee45f77a5203dbbe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__variable__rw_1a5b6a0543111bec2aee45f77a5203dbbe" kindref="member">rpcbasic_register_variable_rw</ref>(</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>namebase,</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>functionbase,</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tfrom<sp/>*variable,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref><sp/>&amp;def,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_=<ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable</ref>&lt;Tfrom&gt;(namebase,<sp/>functionbase,<sp/>variable,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min,<sp/>max,<sp/>def,<sp/>units_,<sp/>desc_),</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_rpc_regset(namebase,<sp/>functionbase,<sp/>this,</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classrpcbasic__register__variable__rw" kindref="compound">rpcbasic_register_variable_rw</ref>::<ref refid="classrpcbasic__register__variable__rw_1a8e04cf081559e9aa6235fd27301cec12" kindref="member">set</ref>,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min,<sp/>max,<sp/>def,<sp/>units_,<sp/>desc_,<sp/>minpriv,<sp/>display_)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1406" refid="classrpcbasic__register__handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrpcbasic__register__handler" kindref="compound">rpcbasic_register_handler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__base" kindref="compound">rpcbasic_base</ref></highlight></codeline>
<codeline lineno="1407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="classrpcbasic__register__handler_1a988eb7c3331580616d6077a0a02ef8e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__handler_1a988eb7c3331580616d6077a0a02ef8e2" kindref="member">rpcbasic_register_handler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>block_alias,</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>handler,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>units_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>desc_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>minpriv_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref>,</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>display_<sp/>=<sp/><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref>)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>d_units<sp/>=<sp/>units_;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>d_desc<sp/>=<sp/>desc_;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>d_minpriv<sp/>=<sp/>minpriv_;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>d_display<sp/>=<sp/>display_;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>d_object<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="block__registry_8h_1ae4e7cd1be7c7f7e231b1644731f18eeb" kindref="member">global_block_registry</ref>.<ref refid="classgr_1_1block__registry_1a67a83c42e2030bba463c99d51e7a8f92" kindref="member">block_lookup</ref>(<ref refid="namespacepmt_1a2a19d2e56f6fbb5645ad17a5937b5f2f" kindref="member">pmt::intern</ref>(block_alias)).get());</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="1439"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callbackregister_base::handlerCallback_t</ref></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inserter(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__handler" kindref="compound">rpcbasic_handler&lt;T&gt;</ref>(d_object,<sp/>handler),</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minpriv_,<sp/>std::string(units_),<sp/>display_,<sp/>std::string(desc_),</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss(std::ostringstream::out);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/>block_alias<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handler;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>d_id<sp/>=<sp/>oss.str();</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;REGISTERING<sp/>GET:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_id<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>desc_<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1a97563a53bad9afcbf8a4f7fba8840be7" kindref="member">registerHandlerCallback</ref>(d_id,<sp/>inserter);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451" refid="classrpcbasic__register__handler_1aa69e73464ef6fb4f867a62d636e9650b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrpcbasic__register__handler_1aa69e73464ef6fb4f867a62d636e9650b" kindref="member">~rpcbasic_register_handler</ref>()</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GR_RPCSERVER_ENABLED</highlight></codeline>
<codeline lineno="1454"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrpcmanager_1a3fb8f3c677b125f9adacb504f83217a6" kindref="member">rpcmanager::get</ref>()-&gt;<ref refid="classrpcserver__booter__base_1a202fb870b4347f2604e1f71c64c88491" kindref="member">i</ref>()-&gt;<ref refid="classrpcserver__base_1a7f0289279ec39bd6096b3964a822f4d0" kindref="member">unregisterHandlerCallback</ref>(d_id);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1456"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458" refid="classrpcbasic__register__handler_1a47eca75ad7a8bd157cfedd030c88bb2f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classrpcbasic__register__handler_1a47eca75ad7a8bd157cfedd030c88bb2f" kindref="member">units</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_units;<sp/>}</highlight></codeline>
<codeline lineno="1459" refid="classrpcbasic__register__handler_1a50d00d4b3423c85b143fbb21a1a30bbc" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classrpcbasic__register__handler_1a50d00d4b3423c85b143fbb21a1a30bbc" kindref="member">description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_desc;<sp/>}</highlight></codeline>
<codeline lineno="1460" refid="classrpcbasic__register__handler_1a0537fea779e328ffd2030ee16cd5d595" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/><ref refid="classrpcbasic__register__handler_1a0537fea779e328ffd2030ee16cd5d595" kindref="member">privilege_level</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_minpriv;<sp/>}</highlight></codeline>
<codeline lineno="1461" refid="classrpcbasic__register__handler_1ada15ac6ee97178367f980616b31394cf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/><ref refid="classrpcbasic__register__handler_1ada15ac6ee97178367f980616b31394cf" kindref="member">default_display</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_display;<sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463" refid="classrpcbasic__register__handler_1ad371309fc60541983a98cf4594891823" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__handler_1ad371309fc60541983a98cf4594891823" kindref="member">units</ref>(std::string<sp/>u)<sp/>{<sp/>d_units<sp/>=<sp/>u;<sp/>}</highlight></codeline>
<codeline lineno="1464" refid="classrpcbasic__register__handler_1a05b4875e5ccdbf82614451e6fda2b46b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__handler_1a05b4875e5ccdbf82614451e6fda2b46b" kindref="member">description</ref>(std::string<sp/>d)<sp/>{<sp/>d_desc<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="1465" refid="classrpcbasic__register__handler_1a3787fda40ec002f334b515a2dd2be83b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__handler_1a3787fda40ec002f334b515a2dd2be83b" kindref="member">privilege_level</ref>(<ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>p)<sp/>{<sp/>d_minpriv<sp/>=<sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="1466" refid="classrpcbasic__register__handler_1af4fadee84ce42a4ed0c0926a245e7678" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrpcbasic__register__handler_1af4fadee84ce42a4ed0c0926a245e7678" kindref="member">default_display</ref>(<ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>d)<sp/>{<sp/>d_display<sp/>=<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>std::string<sp/>d_id;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>std::string<sp/>d_units,<sp/>d_desc;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref><sp/>d_minpriv;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref><sp/>d_display;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>T<sp/>*d_object;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/udooer/Downloads/gnuradio-3.7.13.4/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h"/>
  </compounddef>
</doxygen>
